[
  {
    "testName": "counter",
    "provider": "OpenRouter",
    "modelId": "nvidia/nemotron-nano-9b-v2",
    "numSamples": 10,
    "numCorrect": 0,
    "pass1": 0,
    "pass10": 0,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state = { count: 0 };",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample0_e19a91e137d8be43/Component.svelte:4:24 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state(0)",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample1_5f52fe0bf3b173bd/Component.svelte:4:11 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let count = 0;",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample2_0988c2fd05fe4fcd/Component.svelte:4:16 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let count = 0;",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample3_3f3ebdc861c63c3d/Component.svelte:4:16 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state = { count: 0 };\n  function increment() { $state.count += 1; }\n  function decrement() { $state.count -= 1; }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample4_975b735e8310c8f8/Component.svelte:6:45 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state.count = 0;",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample5_c655b07f40f39a35/Component.svelte:4:19 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state.count = 0;\n  function increment() { $state.count += 1; }\n  function decrement() { $state.count -= 1; }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample6_147016e328edfb57/Component.svelte:6:45 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $count = 0;",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample7_cabe1e1888950f8e/Component.svelte:4:13 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state let count = 0;\n\n  function increment() {\n    $state count = count + 1;\n  }\n\n  function decrement() {\n    $state count = count - 1;\n  }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample8_8e4070a60101bed4/Component.svelte:12:3 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state let count = 0;\n  \n  function increment() {\n    count += 1;\n  }\n  \n  function decrement() {\n    count -= 1;\n  }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample9_543ae7ecca8041e0/Component.svelte:12:3 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      }
    ],
    "timestamp": "2025-09-09T09:58:33.124Z"
  },
  {
    "testName": "derived",
    "provider": "OpenRouter",
    "modelId": "nvidia/nemotron-nano-9b-v2",
    "numSamples": 10,
    "numCorrect": 0,
    "pass1": 0,
    "pass10": 0,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let number = 5;\n  const doubled = $derived(number * 2);",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived_sample0_ead68ebf53668c6d/Component.svelte:5:39 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state: { number: 5 }\n  $derived: doubled = $number * 2",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived_sample1_275d6ba42e6a9216/Component.svelte:5:33 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n  import { $state, $derived } from 'svelte/runes';\n\n  $state(5);\n\n  const doubled = $derived(() => $state * 2);",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived_sample2_41db0d3cae2e205c/Component.svelte:8:45 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const number = $state(5);\n  const doubled = $derived(() => number * 2);",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived_sample3_4a8f9842d1132c5f/Component.svelte:5:45 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script setup>\n$state: 5\n$derived: $state * 2",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived_sample4_4581d19c90d7135e/Component.svelte:5:20 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $effect(() => {\n    const $state = 5\n    const $derived = $state * 2\n  })",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived_sample5_0072b293df0549ef/Component.svelte:7:4 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state let number = 5;",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived_sample6_f2db5cab737be13c/Component.svelte:4:24 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const number = $state(5);\n  const doubled = $derived(() => number * 2);\n\n  function increment() {\n    number += 1;\n  }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived_sample7_c6b605e431009ab4/Component.svelte:9:3 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\nlet number = 5;\n$derived doubled = number => number * 2;\n\nfunction increment() {\n  number += 1;\n}",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived_sample8_6d97d901c8e2f3c6/Component.svelte:9:1 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state = 5\n  $derived = $state * 2",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived_sample9_a0e4d7330e8890de/Component.svelte:5:23 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      }
    ],
    "timestamp": "2025-09-09T09:58:33.124Z"
  },
  {
    "testName": "derived-by",
    "provider": "OpenRouter",
    "modelId": "nvidia/nemotron-nano-9b-v2",
    "numSamples": 10,
    "numCorrect": 0,
    "pass1": 0,
    "pass10": 0,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let $state = '';\n\n  $derived.by((parent) => {\n    const words = parent.trim().split(/\\s+/).length;\n    return [words, parent.length, words > 15];\n  });",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample0_a8586a43fad5530f/Component.svelte:9:5 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state('text', '')\n  $derived.by({\n    wordCount: () => $state.text.split(/\\s+/).length,\n    charCount: () => $state.text.length,\n    isLong: () => $derived.wordCount > 15\n  })",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample1_698ee00c7ace01a6/Component.svelte:9:4 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let $state = '';\n  let $derived = $derived.by($state, ($state) => {\n    const text = $state.trim();\n    const words = text.split(/\\s+/).length;\n    const chars = text.length;\n    const isLong = words > 15;\n    return { words, chars, isLong };\n  });",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample2_4d65251f5dedad44/Component.svelte:11:5 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state = { textInput: '' }\n\n  $derived.by([textInput], {\n    wordCount: $state.textInput.trim().split(/\\s+/).length || 0,\n    charCount: $state.textInput.length,\n    isLong: $derived.wordCount > 15 ? 'Long text' : 'Short text'\n  })",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample3_2b29b46e799ee1f5/Component.svelte:10:4 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n  import { $derived } from 'svelte';\n\n  export let $state = {\n    text: ''\n  };\n\n  const derived = $derived.by(\n    (text) => {\n      const words = text.split(/\\s+/).filter(word => word.length > 0);\n      return {\n        wordCount: words.length,\n        charCount: text.length,\n        isLong: words.length > 15\n      };\n    },\n    $state.text\n  );",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample4_d9db115adcfac5c7/Component.svelte:20:4 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state = { text: '' }\n  $derived.by = ($state) => {\n    const words = $state.text.split(' ').filter(word => word !== '')\n    return {\n      wordCount: words.length,\n      charCount: $state.text.length,\n      lengthIndicator: $derived.by.derived('lengthIndicator', ($state) => $state.wordCount > 15 ? 'Long text' : 'Short text')\n    }\n  }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample5_8464086dc3dcd53c/Component.svelte:12:3 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state: { text: '' }\n  $derived.by(['text'], ($state) => {\n    const words = $state.text.split(/\\s+/).filter(word => word.trim() !== '').length\n    const charCount = $state.text.length\n    const isLong = words > 15\n    return { wordCount: words, charCount, isLong }\n  })",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample6_d74cfa2f704205c9/Component.svelte:10:4 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const text = $state('');\n  const derived = $derived.by(text, (text) => {\n    const words = text.split(/\\s+/).filter(word => word);\n    return {\n      wordCount: words.length,\n      charCount: text.length,\n      isLong: words.length > 15\n    };\n  });",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample7_f34bb83ea582a6c2/Component.svelte:12:5 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state = { text: '' }\n  $derived.by(() => {\n    const words = $state.text.split(/\\s+/).filter(word => word).length\n    const chars = $state.text.length\n    const isLong = words > 15\n    return { words, chars, isLong }\n  })",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample8_fcfed4f4f44ccc1f/Component.svelte:10:4 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state = '';\n  $derived.by(() => {\n    const words = $state.split(/\\s+/).filter(word => word.trim() !== '');\n    return {\n      wordCount: words.length,\n      charCount: $state.length,\n      isLong: words.length > 15\n    };\n  });",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample9_597902e93d719d00/Component.svelte:12:5 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      }
    ],
    "timestamp": "2025-09-09T09:58:33.124Z"
  },
  {
    "testName": "each",
    "provider": "OpenRouter",
    "modelId": "nvidia/nemotron-nano-9b-v2",
    "numSamples": 10,
    "numCorrect": 0,
    "pass1": 0,
    "pass10": 0,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let $state = ['Jerry', 'Elaine', 'Kramer'];\n  function addGeorge() {\n    $state = [...$state, 'George'];\n  }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/each_sample0_47ab1d6b3c46e6ff/Component.svelte:7:3 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state = { characters: [\"Jerry\", \"Elaine\", \"Kramer\"] }\n  $effect(() => $state.characters.push(\"George\"), { on: $state.characters.length > 3 ? \"click: knapp\" : null })",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/each_sample1_3d76c3f008d353c0/Component.svelte:5:111 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $character = ['Jerry', 'Elaine', 'Kramer'];\n  function handleAddGeorge() {\n    $character.push('George');\n  }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/each_sample2_6445e4a7c26e9b24/Component.svelte:7:3 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let characters = ['Jerry', 'Elaine', 'Kramer'];\n  \n  function addGeorge() {\n    characters.push('George');\n  }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/each_sample3_7466abcc3669c568/Component.svelte:8:3 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let characters = [\"Jerry\", \"Elaine\", \"Kramer\"];",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/each_sample4_70bd8bbd9b6f7ae6/Component.svelte:4:49 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $: let $state = [\"Jerry\", \"Elaine\", \"Kramer\"]",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/each_sample5_f09cda970517068a/Component.svelte:4:47 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let characters = ['Jerry', 'Elaine', 'Kramer'];\n  function addGeorge() {\n    characters.push('George');\n  }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/each_sample6_2076bf034a1c931f/Component.svelte:7:3 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state characters = ['Jerry', 'Elaine', 'Kramer'];",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/each_sample7_d1886cba1def13e4/Component.svelte:4:52 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let characters = [\"Jerry\", \"Elaine\", \"Kramer\"];\n  function handleAddGeorge() {\n    characters.push(\"George\");\n  }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/each_sample8_b502a8ae0d72f703/Component.svelte:7:3 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n$state: ['Jerry', 'Elaine', 'Kramer']",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/each_sample9_ba2569e865118c82/Component.svelte:4:37 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      }
    ],
    "timestamp": "2025-09-09T09:58:33.124Z"
  },
  {
    "testName": "effect",
    "provider": "OpenRouter",
    "modelId": "nvidia/nemotron-nano-9b-v2",
    "numSamples": 10,
    "numCorrect": 0,
    "pass1": 0,
    "pass10": 0,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let num = $state(5);\n  let doubled;\n\n  $effect (() => {\n    doubled = num * 2;\n  }) of num;",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/effect_sample0_455a0f0bf9559caf/Component.svelte:9:12 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let number = $state(5);\n  let doubled;\n\n  $effect(() => {\n    doubled = number * 2;\n  });",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/effect_sample1_59563ca229150583/Component.svelte:9:5 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n  import { $state, $effect } from 'svelte';\n\n  let state = $state({ number: 5 });\n\n  $effect(() => {\n    state.doubled = state.number * 2;\n  }, [state.number]);",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/effect_sample2_0d5f64cb646f1b84/Component.svelte:10:21 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n $state value 5;\n $effect {\n   doubled 2 * $state.value;\n }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/effect_sample3_9127d11868fc6153/Component.svelte:7:2 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $$state let number = 5;\n  $$effect let doubled = number * 2;",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/effect_sample4_271bb0dece025f22/Component.svelte:5:36 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state number = 5\n  $effect doubled = () => number * 2",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/effect_sample5_1d85c6b67dba21b3/Component.svelte:5:36 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n  export default {\n    $state: {\n      number: 5\n    },\n    $effect: {\n      doubled: () => number * 2\n    }\n  };",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/effect_sample6_71a47eb5494b232c/Component.svelte:11:4 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let $state = 5;\n  let doubled;\n\n  $effect(() => {\n    doubled = $state * 2;\n  });",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/effect_sample7_1322552f168d2e0f/Component.svelte:9:5 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n  import { $state } from 'svelte';\n\n  $: let state = $state(5);\n  let doubled;\n\n  $effect(() => {\n    doubled = state * 2;\n  });",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/effect_sample8_9dec5d48abd5f90a/Component.svelte:11:5 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state let number = 5;\n  $effect let doubled = $number * 2;",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/effect_sample9_59fddaa950bc1ad0/Component.svelte:5:36 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      }
    ],
    "timestamp": "2025-09-09T09:58:33.124Z"
  },
  {
    "testName": "hello-world",
    "provider": "OpenRouter",
    "modelId": "nvidia/nemotron-nano-9b-v2",
    "numSamples": 10,
    "numCorrect": 0,
    "pass1": 0,
    "pass10": 0,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n</script>\n\n<style>\n.greeting {\n  color: blue;\n  text-align: center;\n  margin: 1rem;\n}",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/hello-world_sample0_d103e0fde2433ecc/Component.svelte:11:1 Expected token </style\nhttps://svelte.dev/e/expected_token"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n</script>\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\n\n<style>\n.greeting {\n  color: blue;\n  text-align: center;\n  margin: 1rem;\n}",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/hello-world_sample1_315637a2143a7d6e/Component.svelte:13:1 Expected token </style\nhttps://svelte.dev/e/expected_token"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n</script>\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\n\n<style>\n.greeting {\n  color: blue;\n  text-align: center;\n  margin: 20px;\n}",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/hello-world_sample2_92ab694055985e82/Component.svelte:13:1 Expected token </style\nhttps://svelte.dev/e/expected_token"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n</script>\n\n<style>\nbody {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  margin: 0;\n}\n.greeting {\n  color: blue;\n  margin: 1rem;\n}",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/hello-world_sample3_80972d445e7b62c5/Component.svelte:17:1 Expected token </style\nhttps://svelte.dev/e/expected_token"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script context=\"module\">\r\n  // Svelte 5 component",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/hello-world_sample4_84cfd789d621072e/Component.svelte:4:23 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n</script>\n\n<style>\n  .greeting {\n    color: blue;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    margin: 10px;\n  }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/hello-world_sample5_b10f80c509237607/Component.svelte:14:3 Expected token </style\nhttps://svelte.dev/e/expected_token"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n</script>\n\n<style>\n  .greeting {\n    color: blue;\n    margin: 10px;\n  }\n  body {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    margin: 0;\n  }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/hello-world_sample6_a4c8e2653c7ec696/Component.svelte:17:3 Expected token </style\nhttps://svelte.dev/e/expected_token"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n</script>\n\n<style>\n  .greeting {\n    color: blue;\n    text-align: center;\n    margin: 10px;\n  }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/hello-world_sample7_df8b25a02df64d7d/Component.svelte:11:3 Expected token </style\nhttps://svelte.dev/e/expected_token"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n</script>\n\n<style>\n.greeting {\n  color: blue;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  padding: 20px;\n}",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/hello-world_sample8_7c74ea839e056448/Component.svelte:15:1 Expected token </style\nhttps://svelte.dev/e/expected_token"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script></script>\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\n<style>\n.greeting {\n  color: blue;\n  text-align: center;\n  margin: 10px;\n}",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/hello-world_sample9_ce9084e0d776ab93/Component.svelte:10:1 Expected token </style\nhttps://svelte.dev/e/expected_token"
        ]
      }
    ],
    "timestamp": "2025-09-09T09:58:33.124Z"
  },
  {
    "testName": "inspect",
    "provider": "OpenRouter",
    "modelId": "nvidia/nemotron-nano-9b-v2",
    "numSamples": 10,
    "numCorrect": 0,
    "pass1": 0,
    "pass10": 0,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let text = $state('Hello world');\n\n  $inspect(text);\n  $inspect(text).with((value) => console.log(Input updated to: ${value}));\n  effect(() => $inspect.trace(text), [text]);",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample0_8f8145961b23649e/Component.svelte:8:45 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let text = $state('Hello world');\n\n  $inspect(text).with((newValue) => {\n    console.log('Input value:', newValue);\n  });\n\n  $effect(text => {\n    $inspect.trace();\n  });",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample1_bef938037a812040/Component.svelte:12:5 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n  import { $state, $inspect, effect } from 'svelte';\n\n  const text = $state('Hello world');\n  $inspect(text).with((newValue) => console.log('Updated:', newValue));\n  effect(() => $inspect.trace(text), [text]);",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample2_510bbdce4d5d44d6/Component.svelte:8:45 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const text = $state('Hello world');\n\n  $inspect(text);\n\n  $inspect(text).with(() => {\n    // Custom callback on text update\n  });\n\n  $effect(text => {\n    $inspect.trace(text);\n  });",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample3_5dcf31fce5f5eaa3/Component.svelte:14:5 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n  import { $state, $inspect, $effect } from 'svelte';\n\n  let text = $state('Hello world');\n\n  $inspect(text);\n\n  $inspect(text).with((newValue) => {\n    console.log('Input updated to:', newValue);\n  });\n\n  $effect(() => {\n    $inspect.trace();\n  }, [text]);",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample4_bbd02028f9748f3b/Component.svelte:16:13 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let text = $state(\"Hello world\");\n  \n  $inspect(text);\n  \n  $inspect(text).with((newVal, oldVal) => {\n    // Custom callback for updates\n  });\n  \n  effect(() => {\n    $inspect.trace();\n  }, [text]);",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample5_92a57c56faf8a0e1/Component.svelte:14:13 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n  import { $state, $inspect, $effect } from 'svelte';\n\n  let text = $state('Hello world');\n\n  const inspect = $inspect(text);\n  inspect.log();\n  inspect.with((newValue) => {});\n\n  $effect(() => {\n    $inspect(text).trace((newValue) => {});\n  });",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample6_71e0aabd91d4843b/Component.svelte:14:5 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n  import { $state, $inspect } from 'svelte';\n\n  let text = $state('Hello world');\n\n  $inspect(text).trace(() => console.log('Input value:', text));\n\n  $inspect(text).with((newValue) => console.log('Custom callback:', newValue));\n\n  $inspect(text).effect(() => $inspect.text.trace());",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample7_51cdec16069dacef/Component.svelte:12:53 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $: text = 'Hello world'\n\n  $inspect(text).with((value) => console.log('Input value:', value))\n  $inspect(text).with((newValue) => {})\n  effect(() => $inspect(text).trace(() => {}))",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample8_8322ea6a8c3e8da0/Component.svelte:8:46 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state('text', 'Hello world')\n\n  $inspect(text).log()\n\n  $inspect(text).with((newValue) => {\n    // Custom callback on update\n  })\n\n  $inspect(text).effect(() => {\n    $inspect.trace(text)\n  })",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample9_e69c1ac40fc00bf0/Component.svelte:14:4 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      }
    ],
    "timestamp": "2025-09-09T09:58:33.124Z"
  },
  {
    "testName": "props",
    "provider": "OpenRouter",
    "modelId": "nvidia/nemotron-nano-9b-v2",
    "numSamples": 10,
    "numCorrect": 0,
    "pass1": 0,
    "pass10": 0,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n\tconst { name = 'World', count = 0, showDetails = false } = $props;\n\tconst countState = $state(0);",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample0_062aec9bc128783a/Component.svelte:5:30 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $props {\n    name: { default: 'World' };\n    count: { default: 0 };\n    showDetails: { default: false };\n  }\n\n  let countState = $state(() => $props.count);",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample1_bdfd777cd3b01b95/Component.svelte:10:46 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $props({ name: 'World', count: 0, showDetails: false });\n  let count = $state(() => $props.count);",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample2_d17311b772663ea5/Component.svelte:5:41 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let countState = $state(() => $props.count);",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample3_9e5efba7fadf5e0a/Component.svelte:4:46 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script {props}>\n  $props = {...$props, name: 'World', count: 0, showDetails: false };\n  $state.count = $props.count;",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample4_ae13cd2faee5e5b7/Component.svelte:5:30 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n$state.count = $props.count;",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample5_26d2a47a67f93614/Component.svelte:4:28 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const { name = 'World', count = 0, showDetails = false } = $props;\n  $count = count;",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample6_b9b9aa4d522fe884/Component.svelte:5:17 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n  export let name = 'World';\n  export let count = 0;\n  export let showDetails = false;\n  const { name, count, showDetails } = $props;\n  $state let countState = count;",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample7_d71daaaf68eacc53/Component.svelte:8:32 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $props = {\n    name: 'World',\n    count: 0,\n    showDetails: false\n  };\n  $state.count = $props.count;",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample8_68d49a451388be25/Component.svelte:9:30 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state let count = $props.count || 0;",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample9_b5a08469e1371d85/Component.svelte:4:39 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      }
    ],
    "timestamp": "2025-09-09T09:58:33.124Z"
  },
  {
    "testName": "snippets",
    "provider": "OpenRouter",
    "modelId": "nvidia/nemotron-nano-9b-v2",
    "numSamples": 10,
    "numCorrect": 0,
    "pass1": 0,
    "pass10": 0,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const books = [\n    \"The Lord of the Rings\",\n    \"To Kill a Mockingbird\",\n    \"1984\"\n  ];\n\n  function title({ title }) {\n    return <span data-testid=\"book-title\">{title}</span>;\n  }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample0_a6d283adf69f117e/Component.svelte:12:3 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const books = [\"The Lord of the Rings\", \"To Kill a Mockingbird\", \"1984\"];",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample1_9693049dc503bcd7/Component.svelte:4:75 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const $books = [\"The Lord of the Rings\", \"To Kill a Mockingbird\", \"1984\"];",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample2_3d514f68d40ac823/Component.svelte:4:76 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const books = [\"The Lord of the Rings\", \"To Kill a Mockingbird\", \"1984\"];",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample3_5a21a6f50ddaf17c/Component.svelte:4:75 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n  export default {\n    books: [\n      \"The Lord of the Rings\",\n      \"To Kill a Mockingbird\",\n      \"1984\"\n    ]\n  }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample4_f6e275d0ceee074c/Component.svelte:10:3 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n  export let books = [\"The Lord of the Rings\", \"To Kill a Mockingbird\", \"1984\"];\n  const title(title) {\n    return <span data-testid=\"book-title\">{title}</span>;\n  }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample5_badb7dbd4da163a2/Component.svelte:7:3 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const books = [\n    \"The Lord of the Rings\",\n    \"To Kill a Mockingbird\",\n    \"1984\"\n  ];",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample6_bb4ace589dda07ad/Component.svelte:8:4 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const books = [\n    \"The Lord of the Rings\",\n    \"To Kill a Mockingbird\",\n    \"1984\"\n  ];\n\n  template title({ title }) {\n    <span data-testid=\"book-title\">{title}</span>\n  }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample7_e7a389ca56814e46/Component.svelte:12:3 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const books = [\"The Lord of the Rings\", \"To Kill a Mockingbird\", \"1984\"];\n\n  defineSnippet('title', (book) => <span data-testid=\"book-title\">{book}</span>);",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample8_3b22ac98600df257/Component.svelte:6:81 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let books = [\"The Lord of the Rings\", \"To Kill a Mockingbird\", \"1984\"];\n  $snippet title (param: string) {\n    <span data-testid=\"book-title\">{param}</span>\n  }",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample9_ce0048b7c679e4c8/Component.svelte:7:3 `<script>` was left open\nhttps://svelte.dev/e/element_unclosed"
        ]
      }
    ],
    "timestamp": "2025-09-09T09:58:33.124Z"
  }
]