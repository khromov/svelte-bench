[
  {
    "testName": "counter",
    "provider": "OpenRouter",
    "modelId": "alibaba/tongyi-deepresearch-30b-a3b",
    "numSamples": 10,
    "numCorrect": 0,
    "pass1": 0,
    "pass10": 0,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state } from 'svelte';\n\n\tconst count = $state(0);\n\n\tfunction decrement() {\n\t\tcount--;\n\t}\n\n\tfunction increment() {\n\t\tcount++;\n\t}\n</script>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample0_4dab3db96be1a6dc/Component.svelte:4:10 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state } from 'svelte';\n\n\tconst count = $state(0);\n\n\tfunction decrement() {\n\t\tcount--;\n\t}\n\n\tfunction increment() {\n\t\tcount++;\n\t}\n</script>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample1_4d16b10ae5e6072e/Component.svelte:4:10 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state } from 'svelte';\n\n\tconst count = $state(0);\n\n\tfunction increment() {\n\t\tcount += 1;\n\t}\n\n\tfunction decrement() {\n\t\tcount -= 1;\n\t}\n</script>\n\n<div class=\"counter\">\n\t<button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n\t<span data-testid=\"count-value\">{count}</span>\n\t<button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample2_6337f273c6495560/Component.svelte:4:10 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state } from 'svelte';\n\t\n\tconst count = $state(0);\n\t\n\tfunction decrement() {\n\t\tcount -= 1;\n\t}\n\t\n\tfunction increment() {\n\t\tcount += 1;\n\t}\n</script>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample3_4176d08652c068cc/Component.svelte:4:10 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state } from 'svelte';\n\n\tconst count = $state(0);\n\n\tfunction decrement() {\n\t\tcount -= 1;\n\t}\n\n\tfunction increment() {\n\t\tcount += 1;\n\t}\n</script>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample4_8ca2fcda30a7ccca/Component.svelte:4:10 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state } from \"svelte\";\n\n\tconst count = $state(0);\n\n\tfunction increment() {\n\t\tcount += 1;\n\t}\n\n\tfunction decrement() {\n\t\tcount -= 1;\n\t}\n</script>\n\n<div class=\"counter\">\n\t<button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n\t<span data-testid=\"count-value\">{count}</span>\n\t<button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample5_0f27535ca7a4da83/Component.svelte:4:10 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<div class=\"counter\">\n  <button on:click={() => count -= 1} data-testid=\"decrement-button\">-</button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button on:click={() => count += 1} data-testid=\"increment-button\">+</button>\n</div>\n\n<script>\n  $state count = 0;\n</script>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample6_e01c0bcf13b1fda9/Component.svelte:10:9 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n\t$count = $state(0);\n\n\tfunction increment() {\n\t\t$count += 1;\n\t}\n\n\tfunction decrement() {\n\t\t$count -= 1;\n\t}\n</script>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n  <span data-testid=\"count-value\">{$count}</span>\n  <button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample7_01dda815e676f654/Component.svelte:4:1 `$count` is an illegal variable name. To reference a global variable called `$count`, use `globalThis.$count`\nhttps://svelte.dev/e/global_reference_invalid"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport {$state} from 'svelte';\n\t\n\tconst count = $state(0);\n</script>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={() => count--}>-</button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button data-testid=\"increment-button\" on:click={() => count++}>+</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample8_41b9c132fabdecbb/Component.svelte:4:9 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state } from 'svelte';\n\t\n\tconst count = $state(0);\n\t\n\tfunction increment() {\n\t\tcount += 1;\n\t}\n\t\n\tfunction decrement() {\n\t\tcount -= 1;\n\t}\n</script>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/counter_sample9_c206da35a614cb94/Component.svelte:4:10 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      }
    ],
    "timestamp": "2025-09-18T22:21:41.967Z"
  },
  {
    "testName": "derived",
    "provider": "OpenRouter",
    "modelId": "alibaba/tongyi-deepresearch-30b-a3b",
    "numSamples": 10,
    "numCorrect": 0,
    "pass1": 0,
    "pass10": 0,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<div>\n  <p data-testid=\"number-value\">Number: {$state(5)}</p>\n  <p data-testid=\"doubled-value\">Doubled: {$derived(number * 2)}</p>\n  <button data-testid=\"increment-button\">Increment</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/derived_sample0_0a21095777d69acb/Component.svelte:4:41 `$state(...)` can only be used as a variable declaration initializer, a class field declaration, or the first assignment to a class field at the top level of the constructor.\nhttps://svelte.dev/e/state_invalid_placement"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport {$state, $derived} from 'svelte';\n\n\tconst number = $state(5);\n\tconst doubled = $derived(number * 2);\n\n\tconst increment = () => {\n\t\tnumber += 1;\n\t};\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived_sample1_f2bb8c4da408d1d7/Component.svelte:4:9 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state, $derived } from 'svelte';\n\n\tconst number = $state(5);\n\tconst doubled = $derived(number * 2);\n\n\tconst increment = () => {\n\t\tnumber += 1;\n\t};\n</script>\n\n<p data-testid=\"number-value\">Number: {number}</p>\n<p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n<button data-testid=\"increment-button\" on:click={increment}>Increment</button>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived_sample2_c7aacb7747c55a0d/Component.svelte:4:10 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\nconst number = $state(5);\nconst doubled = $derived(number * 2);\n\nfunction increment() {\n  number += 1;\n}\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/derived_sample3_db17c2f88d20c84e/Component.svelte:8:2 Cannot assign to constant\nhttps://svelte.dev/e/constant_assignment"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport {$state, $derived} from 'svelte';\n\n\tconst number = $state(5);\n\tconst doubled = $derived(number * 2);\n\n\tfunction increment() {\n\t\tnumber += 1;\n\t}\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {$state(number)}</p>\n  <p data-testid=\"doubled-value\">Doubled: {$derived(doubled)}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived_sample4_9b02f9780c2fb9ae/Component.svelte:4:9 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<div>\n  <p data-testid=\"number-value\">Number: {$state:number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {$derived:number * 2}</p>\n  <button \n    data-testid=\"increment-button\" \n    on:click={() => { $state:number += 1 }}\n  >Increment</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived_sample5_acd45ef0caae8d22/Component.svelte:4:47 Expected token }\nhttps://svelte.dev/e/expected_token"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<div>\n  <p data-testid=\"number-value\">Number: {$state(5)}</p>\n  <p data-testid=\"doubled-value\">Doubled: {$derived($state(5) * 2)}</p>\n  <button \n    data-testid=\"increment-button\"\n    on:click={() => ($state(5) = $state(5) + 1)}\n  >Increment</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived_sample6_770427ae1c97a685/Component.svelte:8:21 Assigning to rvalue\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<div>\n  <p data-testid=\"number-value\">Number: {$state.number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {$derived.doubled}</p>\n  <button data-testid=\"increment-button\" on:click={() => {$state.number += 1}}>Increment</button>\n</div>\n\n<script>\n  $state.number = 5;\n  $derived.doubled = $state.number * 2;\n</script>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/derived_sample7_2240354efe6610b0/Component.svelte:10:2 `$state.number` is not a valid rune\nhttps://svelte.dev/e/rune_invalid_name"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<div>\n  <p data-testid=\"number-value\">Number: {$state(5)}</p>\n  <p data-testid=\"doubled-value\">Doubled: {$derived(() => number * 2)}</p>\n  <button data-testid=\"increment-button\" on:click={() => number = number + 1}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/derived_sample8_a2830da0c05821d7/Component.svelte:4:41 `$state(...)` can only be used as a variable declaration initializer, a class field declaration, or the first assignment to a class field at the top level of the constructor.\nhttps://svelte.dev/e/state_invalid_placement"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport {$state, $derived} from 'svelte';\n\n\tconst number = $state(5);\n\tconst doubled = $derived(number * 2);\n\n\tfunction increment() {\n\t\tnumber += 1;\n\t}\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived_sample9_efb138337b467bec/Component.svelte:4:9 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      }
    ],
    "timestamp": "2025-09-18T22:21:41.967Z"
  },
  {
    "testName": "derived-by",
    "provider": "OpenRouter",
    "modelId": "alibaba/tongyi-deepresearch-30b-a3b",
    "numSamples": 10,
    "numCorrect": 0,
    "pass1": 0,
    "pass10": 0,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state, $derived.by } from 'svelte';\n\n\tconst text = $state('');\n\tconst wordCount = $derived.by(() => text.split(/\\s+/).filter(Boolean).length);\n\tconst charCount = $derived.by(() => text.length);\n\tconst isLong = $derived.by(() => wordCount > 15);\n\n\tfunction clearText() {\n\t\ttext = '';\n\t}\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <button data-testid=\"clear-button\" on:click={clearText}>Clear</button>\n  <div>\n    <p data-testid=\"word-count\">Words: {wordCount}</p>\n    <p data-testid=\"char-count\">Characters: {charCount}</p>\n    <p data-testid=\"length-indicator\">Status: {isLong ? 'Long text' : 'Short text'}</p>\n  </div>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample0_d9406192ec4fbf12/Component.svelte:4:26 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state, $derived.by } from 'svelte';\n\n\tlet textInput = $state('');\n\tconst wordCount = $derived.by(() => textInput.split(/\\s+/).filter(Boolean).length);\n\tconst charCount = $derived.by(() => textInput.length);\n\tconst isLong = $derived.by(() => wordCount > 15);\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={$state(textInput)} />\n  <button data-testid=\"clear-button\" on:click={$state(textInput, '')}>Clear</button>\n  <div>\n    <p data-testid=\"word-count\">Words: {wordCount}</p>\n    <p data-testid=\"char-count\">Characters: {charCount}</p>\n    <p data-testid=\"length-indicator\">Status: {$state(isLong) ? \"Long text\" : \"Short text\"}</p>\n  </div>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample1_84c83ac3e4d1e209/Component.svelte:4:26 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state, $derived.by } from 'svelte';\n\n\tconst text = $state('');\n\tconst wordCount = $derived.by(() => text.split(/\\s+/).filter(Boolean).length);\n\tconst charCount = $derived.by(() => text.length);\n\tconst isLong = $derived.by(() => wordCount > 15);\n\n\tfunction clear() {\n\t\ttext = '';\n\t}\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <button data-testid=\"clear-button\" on:click={clear}>Clear</button>\n  <div>\n    <p data-testid=\"word-count\">Words: {$wordCount}</p>\n    <p data-testid=\"char-count\">Characters: {$charCount}</p>\n    <p data-testid=\"length-indicator\">Status: {$isLong ? 'Long text' : 'Short text'}</p>\n  </div>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample2_1183abd1988bd3b8/Component.svelte:4:26 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state, $derived.by } from 'svelte';\n\n\tconst text = $state('');\n\tconst wordCount = $derived.by(() => text.split(/\\s+/).filter(Boolean).length);\n\tconst charCount = $derived.by(() => text.length);\n\tconst isLong = $derived.by(() => wordCount() > 15);\n\n\tfunction clear() {\n\t\ttext = '';\n\t}\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={$state(text)} />\n  <button data-testid=\"clear-button\" on:click={clear}>Clear</button>\n  <div>\n    <p data-testid=\"word-count\">Words: {$state(wordCount)}</p>\n    <p data-testid=\"char-count\">Characters: {$state(charCount)}</p>\n    <p data-testid=\"length-indicator\">Status: {$state(isLong) ? 'Long text' : 'Short text'}</p>\n  </div>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample3_643246c8c6f25006/Component.svelte:4:26 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state, $derived.by } from '$sveltejs/kit';\n\n\tconst text = $state('');\n\tconst wordCount = $derived.by(() => text.split(/\\s+/).filter(Boolean).length);\n\tconst charCount = $derived.by(() => text.length);\n\tconst isLong = $derived.by(() => wordCount > 15);\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <button data-testid=\"clear-button\" on:click={() => (text = '')}>Clear</button>\n  <div>\n    <p data-testid=\"word-count\">Words: {$wordCount}</p>\n    <p data-testid=\"char-count\">Characters: {$charCount}</p>\n    <p data-testid=\"length-indicator\">Status: {isLong ? 'Long text' : 'Short text'}</p>\n  </div>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample4_d29bbd6804f7cfe7/Component.svelte:4:26 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state, $derived.by } from 'svelte';\n\n\tconst text = $state('');\n\tconst wordCount = $derived.by(() => text.trim().split(/\\s+/).filter(Boolean).length);\n\tconst charCount = $derived.by(() => text.length);\n\tconst isLong = $derived.by(() => wordCount > 15);\n</script>\n\n<div>\n  <input\n    data-testid=\"text-input\"\n    type=\"text\"\n    bind:value={text}\n  />\n  <button\n    data-testid=\"clear-button\"\n    on:click={() => text = ''}\n  >\n    Clear\n  </button>\n  <div>\n    <p data-testid=\"word-count\">Words: {$wordCount}</p>\n    <p data-testid=\"char-count\">Characters: {$charCount}</p>\n    <p data-testid=\"length-indicator\">Status: {$isLong ? 'Long text' : 'Short text'}</p>\n  </div>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample5_f0bf0f20171a6073/Component.svelte:4:26 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport {$state, $derived.by} from 'svelte';\n\n\tconst text = $state('');\n\tconst wordCount = $derived.by(() => text.split(/\\s+/).filter(Boolean).length);\n\tconst charCount = $derived.by(() => text.length);\n\tconst isLong = $derived.by(() => wordCount > 15);\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <button data-testid=\"clear-button\" on:click={() => (text = '')}>Clear</button>\n  <div>\n    <p data-testid=\"word-count\">Words: {wordCount}</p>\n    <p data-testid=\"char-count\">Characters: {charCount}</p>\n    <p data-testid=\"length-indicator\">Status: {isLong ? 'Long text' : 'Short text'}</p>\n  </div>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample6_85f3d9586f56d0db/Component.svelte:4:25 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state, $derived.by } from 'svelte';\n\n\tconst text = $state('');\n\t\n\tconst wordCount = $derived.by({\n\t\tget() {\n\t\t\treturn text.split(/\\s+/).filter(Boolean).length;\n\t\t}\n\t});\n\t\n\tconst charCount = $derived.by({\n\t\tget() {\n\t\t\treturn text.length;\n\t\t}\n\t});\n\t\n\tconst lengthIndicator = $derived.by({\n\t\tget() {\n\t\t\treturn wordCount > 15 ? \"Long text\" : \"Short text\";\n\t\t}\n\t});\n\t\n\tfunction clearText() {\n\t\ttext = '';\n\t}\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <button data-testid=\"clear-button\" on:click={clearText}>Clear</button>\n  <div>\n    <p data-testid=\"word-count\">Words: {$wordCount}</p>\n    <p data-testid=\"char-count\">Characters: {$charCount}</p>\n    <p data-testid=\"length-indicator\">Status: {$lengthIndicator}</p>\n  </div>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample7_7114ffa913840a4c/Component.svelte:4:26 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state, $derived.by } from 'svelte';\n\t\n\tlet $text = $state('');\n\t\n\tconst $wordCount = $derived.by(() => {\n\t\treturn $text.trim() === '' ? 0 : $text.trim().split(/\\s+/).length;\n\t});\n\t\n\tconst $charCount = $derived.by(() => $text.length);\n\t\n\tconst $isLongText = $derived.by(() => $wordCount > 15);\n</script>\n\n<div>\n  <input\n    data-testid=\"text-input\"\n    type=\"text\"\n    bind:value={$text}\n  />\n  <button\n    data-testid=\"clear-button\"\n    on:click={() => {$text = '';}}\n  >\n    Clear\n  </button>\n  <div>\n    <p data-testid=\"word-count\">Words: {$wordCount}</p>\n    <p data-testid=\"char-count\">Characters: {$charCount}</p>\n    <p data-testid=\"length-indicator\">Status: {$isLongText ? 'Long text' : 'Short text'}</p>\n  </div>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample8_8957e7e4913f12e4/Component.svelte:4:26 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state, $derived.by } from 'svelte';\n\n\tconst text = $state('');\n\tconst wordCount = $derived.by(() => text.trim().split(/\\s+/).length);\n\tconst charCount = $derived.by(() => text.length);\n\tconst isLong = $derived.by(() => wordCount > 15);\n</script>\n\n<div>\n  <input\n    data-testid=\"text-input\"\n    type=\"text\"\n    bind:value={text}\n  />\n  <button\n    data-testid=\"clear-button\"\n    on:click={() => text = ''}\n  >\n    Clear\n  </button>\n  <div>\n    <p data-testid=\"word-count\">Words: {$wordCount}</p>\n    <p data-testid=\"char-count\">Characters: {$charCount}</p>\n    <p data-testid=\"length-indicator\">Status: {$isLong ? 'Long text' : 'Short text'}</p>\n  </div>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/derived-by_sample9_1bde1a78f2857865/Component.svelte:4:26 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      }
    ],
    "timestamp": "2025-09-18T22:21:41.967Z"
  },
  {
    "testName": "each",
    "provider": "OpenRouter",
    "modelId": "alibaba/tongyi-deepresearch-30b-a3b",
    "numSamples": 10,
    "numCorrect": 3,
    "pass1": 0.30000000000000004,
    "pass10": 1,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const characters = $state([\"Jerry\", \"Elaine\", \"Kramer\"]);\n</script>\n\n<div>\n  <ul data-testid=\"characters-list\">\n    {#each characters as character, character}\n      <li data-testid=\"character\">{character}</li>\n    {/each}\n  </ul>\n  <button data-testid=\"add-george-button\" on:click={() => characters.push(\"George\")}>Add George</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/each_sample0_f2dacbbd493e7efc/Component.svelte `character` has already been declared\nhttps://svelte.dev/e/declaration_duplicate"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n\tconst characters = $state(['Jerry', 'Elaine', 'Kramer']);\n</script>\n\n<div>\n  <ul data-testid=\"characters-list\">\n    {#each characters as character}\n      <li data-testid=\"character\">{character}</li>\n    {/each}\n  </ul>\n  <button data-testid=\"add-george-button\" on:click={() => characters.push('George')}>\n    Add George\n  </button>\n</div>",
        "success": true,
        "errors": []
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state {\n    characters: string[] = [\"Jerry\", \"Elaine\", \"Kramer\"]\n  }\n\n  function addGeorge() {\n    characters.push(\"George\");\n  }\n</script>\n\n<div>\n  <ul data-testid=\"characters-list\">\n    {#each characters as character, index}\n      <li data-testid=\"character\" key={index}>{character}</li>\n    {:else}\n      No characters to display\n    {/each}\n  </ul>\n  <button data-testid=\"add-george-button\" on:click={addGeorge}>Add George</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/each_sample2_c9a4c752f0157f10/Component.svelte:4:9 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport {$state} from 'svelte';\n\n\tconst characters = $state(['Jerry', 'Elaine', 'Kramer']);\n\n\tconst addGeorge = () => {\n\t\tcharacters.push('George');\n\t};\n</script>\n\n<div>\n\t<ul data-testid=\"characters-list\">\n\t\t{#each characters as character}\n\t\t\t<li data-testid=\"character\">{character}</li>\n\t\t{/each}\n\t</ul>\n\t<button \n\t\ton:click={addGeorge} \n\t\tdata-testid=\"add-george-button\"\n\t>\n\t\tAdd George\n\t</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/each_sample3_748aa713752d0f03/Component.svelte:4:9 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state } from 'svelte';\n\tconst characters = $state(['Jerry', 'Elaine', 'Kramer']);\n</script>\n\n<div>\n  <ul data-testid=\"characters-list\">\n    {#each characters as character, index}\n      <li data-testid=\"character\" key={index}>{character}</li>\n    {/each}\n  </ul>\n  <button data-testid=\"add-george-button\" on:click={() => characters.push('George')}>Add George</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/each_sample4_2f47b94465687e01/Component.svelte:4:10 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const characters = $state([\"Jerry\", \"Elaine\", \"Kramer\"]);\n</script>\n\n<div>\n  <ul data-testid=\"characters-list\">\n    {#each characters as character}\n      <li data-testid=\"character\">{character}</li>\n    {/each}\n  </ul>\n  <button data-testid=\"add-george-button\" on:click={() => characters.push(\"George\")}>Add George</button>\n</div>",
        "success": true,
        "errors": []
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\ncharacters = $state([\"Jerry\", \"Elaine\", \"Kramer\"]);\naddGeorge = () => characters.push(\"George\");\n</script>\n\n<div>\n  <ul data-testid=\"characters-list\">\n    {#each characters as character}\n      <li data-testid=\"character\">{character}</li>\n    {/each}\n  </ul>\n  <button data-testid=\"add-george-button\" on:click={addGeorge}>Add George</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/each_sample6_87a2051b680d1ccb/Component.svelte:4:13 `$state(...)` can only be used as a variable declaration initializer, a class field declaration, or the first assignment to a class field at the top level of the constructor.\nhttps://svelte.dev/e/state_invalid_placement"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const characters = $state([\"Jerry\", \"Elaine\", \"Kramer\"]);\n\n  function addGeorge() {\n    characters.push(\"George\");\n  }\n</script>\n\n<div>\n  <ul data-testid=\"characters-list\">\n    {#each characters as character}\n      <li data-testid=\"character\">{character}</li>\n    {/each}\n  </ul>\n  <button data-testid=\"add-george-button\" on:click={addGeorge}>Add George</button>\n</div>",
        "success": true,
        "errors": []
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state characters = ['Jerry', 'Elaine', 'Kramer'];\n  \n  function addCharacter() {\n    characters.push('George');\n  }\n</script>\n\n<ul data-testid=\"characters-list\">\n  {#each characters as character}\n  <li data-testid=\"character\">{character}</li>\n  {/each}\n</ul>\n<button data-testid=\"add-george-button\" on:click={addCharacter}>\n  Add George\n</button>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/each_sample8_c65600327169298f/Component.svelte:4:9 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<div>\n  <ul data-testid=\"characters-list\">\n    {#each characters as character}\n      <li data-testid=\"character\">{character}</li>\n    {/each}\n  </ul>\n  <button data-testid=\"add-george-button\" on:click={() => characters = [...characters, 'George']}>Add George</button>\n</div>\n\n<script>\n  import {$state} from 'svelte';\n\n  const characters = $state(['Jerry', 'Elaine', 'Kramer']);\n</script>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/each_sample9_76027b8e25b4135a/Component.svelte:13:10 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      }
    ],
    "timestamp": "2025-09-18T22:21:41.967Z"
  },
  {
    "testName": "effect",
    "provider": "OpenRouter",
    "modelId": "alibaba/tongyi-deepresearch-30b-a3b",
    "numSamples": 10,
    "numCorrect": 0,
    "pass1": 0,
    "pass10": 0,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n  import { $state, $effect } from 'svelte';\n\n  const number = $state(5);\n  const doubled = $state(number() * 2);\n\n  $effect(() => {\n    doubled.set(number() * 2);\n  });\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={() => number.set(number() + 1)}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/effect_sample0_a0b3ca0050e9fe82/Component.svelte:4:11 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state, $effect } from 'svelte';\n\n\tconst number = $state(5);\n\tconst doubled = $state();\n\n\t$effect(() => {\n\t\tdoubled(number() * 2);\n\t});\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={() => number(number() + 1)}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/effect_sample1_e7e2ae6aa0ba0f1e/Component.svelte:4:10 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state, $effect } from \"svelte\";\n\n\tlet number = $state(5);\n\tlet doubled = $state(0);\n\n\t$effect(() => {\n\t\tdoubled = number * 2;\n\t});\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={() => number++}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/effect_sample2_bb954103949acdf0/Component.svelte:4:10 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n  import { $state, $effect } from 'svelte';\n\n  const number = $state(5);\n  let doubled;\n\n  $effect(() => {\n    doubled = number * 2;\n  });\n\n  function increment() {\n    number += 1;\n  }\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/effect_sample3_b2265beac4eeef81/Component.svelte:4:11 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n  import { $state, $effect } from 'svelte';\n\n  let number = $state(5);\n  let doubled;\n\n  function increment() {\n    number += 1;\n  }\n\n  $effect(() => {\n    doubled = number * 2;\n  });\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/effect_sample4_837d23b813052b16/Component.svelte:4:11 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<div>\n  <p data-testid=\"number-value\">Number: {$state(5)}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={() => number++}>Increment</button>\n</div>\nconst number = $state(5)\nlet doubled\n\n$effect(() => {\n  doubled = number * 2\n})",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/effect_sample5_27c43e18df04313c/Component.svelte:4:41 `$state(...)` can only be used as a variable declaration initializer, a class field declaration, or the first assignment to a class field at the top level of the constructor.\nhttps://svelte.dev/e/state_invalid_placement"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n\tconst number = $state(5);\n\tconst doubled = $state();\n\n\t$effect(() => {\n\t\tdoubled = number * 2;\n\t});\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={() => number++}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/effect_sample6_2cac78058046d148/Component.svelte:8:2 Cannot assign to constant\nhttps://svelte.dev/e/constant_assignment"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport {$state, $effect} from 'svelte';\n\n\tconst number = $state(5);\n\tlet doubled;\n\n\t$effect(() => {\n\t\tdoubled = number() * 2;\n\t});\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number()}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button \n    data-testid=\"increment-button\" \n    on:click={() => number(number() + 1)}\n  >\n    Increment\n  </button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/effect_sample7_14508ae79c7e9237/Component.svelte:4:9 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n  import { $state, $effect } from 'svelte';\n\n  let number = $state(5);\n  let doubled = $state(0);\n\n  $effect(() => {\n    doubled = number * 2;\n  });\n\n  function increment() {\n    number++;\n  }\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/effect_sample8_d71d62d8476fe6b0/Component.svelte:4:11 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport {$state, $effect} from 'svelte';\n\n\tconst number = $state(5);\n\tlet doubled;\n\n\t$effect(() => {\n\t\tdoubled = number * 2;\n\t});\n\n\tconst increment = () => {\n\t\tnumber += 1;\n\t};\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/effect_sample9_2d6eb34a275c791f/Component.svelte:4:9 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      }
    ],
    "timestamp": "2025-09-18T22:21:41.967Z"
  },
  {
    "testName": "hello-world",
    "provider": "OpenRouter",
    "modelId": "alibaba/tongyi-deepresearch-30b-a3b",
    "numSamples": 10,
    "numCorrect": 8,
    "pass1": 0.7999999999999999,
    "pass10": 1,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n</script>\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\n\n<style>\n    .greeting {\n        color: blue;\n        text-align: center;\n        position: fixed;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        margin: 20px;\n    }\n</style>",
        "success": true,
        "errors": [],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\nexport let name = 'World';\n</script>\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, {$name}!</div>\n\n<style>\n.greeting {\n    color: blue;\n    text-align: center;\n    margin: 20px auto;\n    width: fit-content;\n}\n</style>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/hello-world_sample1_bc070a906b3d9650/Component.svelte:4:0 Cannot use `export let` in runes mode — use `$props()` instead\nhttps://svelte.dev/e/legacy_export_invalid"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<div class=\"container\">\n  <div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\n</div>\n\n<style>\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n}\n\n.greeting {\n  color: blue;\n  text-align: center;\n  margin: 20px;\n}\n</style>",
        "success": true,
        "errors": []
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n</script>\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\n\n<style>\n.greeting {\n    text-align: center;\n    color: blue;\n    margin: 20px auto;\n    width: fit-content;\n}\n</style>",
        "success": true,
        "errors": []
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\n\n<style>\n.greeting {\n    color: blue;\n    text-align: center;\n    margin: 20px;\n}\n</style>",
        "success": true,
        "errors": []
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\nexport default {};\n</script>\n\n<style>\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  width: 100%;\n}\n\n.greeting {\n  color: blue;\n  margin: 1rem;\n  text-align: center;\n}\n</style>\n\n<div class=\"container\">\n  <div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/hello-world_sample5_868fd12edd1e81b1/Component.svelte:4:0 A component cannot have a default export\nhttps://svelte.dev/e/module_illegal_default_export"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n</script>\n\n<div class=\"root\">\n  <div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\n</div>\n\n<style>\n.root {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n}\n\n.greeting {\n  color: blue;\n  margin: 20px;\n  text-align: center;\n}\n</style>",
        "success": true,
        "errors": []
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<!-- HelloWorld.svelte -->\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\n\n<style>\n    .greeting {\n        color: blue;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        margin: 1rem;\n    }\n</style>",
        "success": true,
        "errors": []
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\nTo create the HelloWorld component with the specified requirements, I'll implement a Svelte component that displays \"Hello, World!\" with proper styling and positioning.\n\n1. The component will have a div with data-testid=\"greeting\" and the class greeting\n2. The text will be styled with blue color and centered on the page\n3. Small margin (20px) will be added around the text\n\nHere's the implementation:\n\n<script>\n  // Importing necessary Svelte built-ins\n</script>\n\n<style>\n  body {\n    margin: 0;\n    padding: 0;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  \n  .greeting {\n    color: blue;\n    margin: 20px;\n  }\n</style>\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\nThis solution will:\n- Position the text in the center of the page using flexbox\n- Apply a blue color to the text\n- Add 20px margin around the text\n- Include the required data-testid attribute\n- Maintain the single-div structure from the example",
        "success": true,
        "errors": []
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n</script>\n\n<style>\n.greeting {\n\tcolor: blue;\n\ttext-align: center;\n\twidth: fit-content;\n\tmargin: 20px auto;\n}\n</style>\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>",
        "success": true,
        "errors": []
      }
    ],
    "timestamp": "2025-09-18T22:21:41.967Z"
  },
  {
    "testName": "inspect",
    "provider": "OpenRouter",
    "modelId": "alibaba/tongyi-deepresearch-30b-a3b",
    "numSamples": 10,
    "numCorrect": 0,
    "pass1": 0,
    "pass10": 0,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport {$state, $effect, $inspect} from 'svelte';\n\n\tconst text = $state('Hello world');\n\n\t$effect(() => {\n\t\t$inspect.trace(text).with('Text changed', () => {\n\t\t\tconsole.log('Text updated:', text);\n\t\t});\n\t});\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={$inspect(text)} />\n  <p data-testid=\"text-value\">Current text: \"{text}\"</p>\n  <p data-testid=\"char-count\">Character count: {$inspect(text.length)}</p>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample0_aa8d9ac4d3e4a73b/Component.svelte:4:9 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<div>\n  <input\n    data-testid=\"text-input\"\n    type=\"text\"\n    bind:value={$state.text}\n  />\n  <p data-testid=\"text-value\">Current text: \"{text}\"</p>\n  <p data-testid=\"char-count\">Character count: {$computed.count}</p>\n</div>\n\n<script>\n  $state.text = \"Hello world\";\n  $state.count = $state.text.length;\n\n  $inspect($state.text);\n  $inspect($state.text).with((value) => console.log(Text changed: ${value}));\n\n  $effect(() => {\n    $state.count = $state.text.length;\n    $inspect.trace($state.text);\n  });\n</script>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample1_c7f56fdc5d86aa2d/Component.svelte:18:57 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state, $effect, $inspect } from 'svelte';\n\n\tconst text = $state('Hello world');\n\n\t// Basic $inspect to log the input value\n\t$inspect(text);\n\n\t// Track updates with custom callback using $inspect(...).with\n\tconst trackedText = $inspect(text).with((value) => {\n\t\tconsole.log('Text updated to:', value);\n\t});\n\n\t// $effect with $inspect.trace to log when input changes\n\t$effect(() => {\n\t\t$inspect.trace(text);\n\t\tconsole.log('Input changed to:', text);\n\t});\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={$inspect(text)} />\n  <p data-testid=\"text-value\">Current text: \"{text}\"</p>\n  <p data-testid=\"char-count\">Character count: {$inspect(trackedText).with((val) => val.length)}</p>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample2_113bb85c04381e72/Component.svelte:4:10 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state text = \"Hello world\";\n\n  // Basic logging\n  $inspect(text);\n\n  // Logging with custom callback\n  $inspect(text).with((value, prev) => {\n    console.log(Text updated from '${prev}' to '${value}');\n    return value;\n  });\n\n  // Effect with trace logging\n  $effect(() => {\n    $inspect.trace(() => {\n      console.log(Effect log: text changed to \"${text}\");\n    });\n  });\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <p data-testid=\"text-value\">Current text: \"{text}\"</p>\n  <p data-testid=\"char-count\">Character count: {text.length}</p>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample3_20283beaa2673dca/Component.svelte:4:9 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state, $effect, $inspect } from 'svelte';\n\n\tconst text = $state('Hello world');\n\t$inspect(text);\n\t$inspect(text).with('custom note for input');\n\n\t$effect(() => {\n\t\tif ($state.changed(text, text.get)) {\n\t\t\t$inspect.trace(text.get()).with(text changed: ${text.get()});\n\t\t}\n\t});\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={$state.get(text)} />\n  <p data-testid=\"text-value\">Current text: \"{text.get()}\"</p>\n  <p data-testid=\"char-count\">Character count: {$state.get(text).length}</p>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample4_41a5a1ff367a172f/Component.svelte:12:40 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport {$state, $effect, $inspect} from 'svelte';\n\n\tconst text = $state(\"Hello world\");\n\n\t// Basic $inspect to log value to console\n\t$inspect(text);\n\n\t// $inspect with custom callback\n\t$inspect(text).with((value, prev) => {\n\t\tconsole.log(Text updated: \"${value}\" (previous: \"${prev}\"));\n\t});\n\n\t// Track changes with trace inside an effect\n\t$effect(() => {\n\t\tconst currentValue = text;\n\t\t$inspect(currentValue).trace('Text input change');\n\t});\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <p data-testid=\"text-value\">Current text: \"{text}\"</p>\n  <p data-testid=\"char-count\">Character count: {text.length}</p>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample5_6202e06bc2791cb9/Component.svelte:13:19 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n\tlet text = $state(\"Hello world\");\n\n\tinspect(text, {\n\t\tonChange: (newValue, oldValue) => {\n\t\t\tconsole.log(Basic inspect: Text changed from \"${oldValue}\" to \"${newValue}\");\n\t\t}\n\t});\n\n\t$effect(() => {\n\t\tinspect(text, {\n\t\t\ttoString: () => Current text: \"${text}\"\n\t\t});\n\n\t\ttrace(text);\n\t});\n</script>\n\n<div>\n\t<input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n\t<p data-testid=\"text-value\">Current text: \"{text}\"</p>\n\t<p data-testid=\"char-count\">Character count: {text.length}</p>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample6_14f9668db3b0fb62/Component.svelte:8:21 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $state, $effect, $inspect } from 'svelte';\n\n\tconst text = $state(\"Hello world\");\n\n\t$effect(() => {\n\t\t// Basic $inspect logging\n\t\t$inspect(text);\n\t\t\n\t\t// Custom callback with $inspect(...).with\n\t\t$inspect(text).with(v => {\n\t\t\tconsole.log(Value updated: \"${v}\");\n\t\t});\n\t\t\n\t\t// Trace changes with $inspect.trace()\n\t\t$inspect.trace('InputField', text);\n\t});\n</script>\n\n<div>\n\t<input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n\t<p data-testid=\"text-value\">Current text: \"{text}\"</p>\n\t<p data-testid=\"char-count\">Character count: {text.length}</p>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample7_9180f858e384477e/Component.svelte:14:21 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n\tlet text = $state('Hello world');\n\n\t$inspect(text);\n\n\t$inspect(text).with(({ value, prev }) => {\n\t\tconsole.log(Input changed from \"${prev}\" to \"${value}\");\n\t});\n\n\t$effect(() => {\n\t\t$inspect.trace(text, Input has changed to: \"${text}\");\n\t});\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <p data-testid=\"text-value\">Current text: \"{text}\"</p>\n  <p data-testid=\"char-count\">Character count: {text.length}</p>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample8_f17614384012afc1/Component.svelte:9:20 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state text = \"Hello world\";\n  $inspect(text);\n  $inspect(text).with(console.log);\n  \n  $effect(() => {\n    $inspect.trace();\n  });\n</script>\n\n<div>\n  <input\n    data-testid=\"text-input\"\n    type=\"text\"\n    bind:value={$state.text}\n  />\n  <p data-testid=\"text-value\">Current text: \"{$state.text}\"</p>\n  <p data-testid=\"char-count\">Character count: {$state.text.length}</p>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample9_7f866ffcc9af0ab6/Component.svelte:4:9 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      }
    ],
    "timestamp": "2025-09-18T22:21:41.967Z"
  },
  {
    "testName": "props",
    "provider": "OpenRouter",
    "modelId": "alibaba/tongyi-deepresearch-30b-a3b",
    "numSamples": 10,
    "numCorrect": 0,
    "pass1": 0,
    "pass10": 0,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $props, $state } from 'svelte';\n\n\tconst { name, count: initialCount, showDetails } = $props({\n\t\tname: 'World',\n\t\tcount: 0,\n\t\tshowDetails: false\n\t});\n\n\tconst count = $state(initialCount);\n</script>\n\n<div>\n\t<h1 data-testid=\"name-display\">Hello, {name}!</h1>\n\t<p data-testid=\"count-display\">Count: {count}</p>\n\t<button data-testid=\"increment-button\" on:click={() => count += 1}>Increment</button>\n\t\n\t{#if $props().showDetails}\n\t\t<div data-testid=\"details\">\n\t\t\t<p>Name is {name}</p>\n\t\t\t<p>Count is {count}</p>\n\t\t\t<p>ShowDetails is {showDetails}</p>\n\t\t</div>\n\t{/if}\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample0_83517f2823ba7a78/Component.svelte:4:10 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport {$props, $state} from 'svelte';\n\t\n\tconst { name, count: initialCount, showDetails } = $props({\n\t\tname: 'World',\n\t\tcount: 0,\n\t\tshowDetails: false\n\t});\n\t\n\tconst count = $state(initialCount);\n</script>\n\n<div>\n  <h1 data-testid=\"name-display\">Hello, {name}!</h1>\n  <p data-testid=\"count-display\">Count: {count}</p>\n  <button data-testid=\"increment-button\" on:click={() => count += 1}>Increment</button>\n  \n  {#if showDetails}\n    <div data-testid=\"details\">\n      <p>Name is {name}</p>\n      <p>Count is {count}</p>\n      <p>ShowDetails is {showDetails}</p>\n    </div>\n  {/if}\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample1_cf96a100d12c239d/Component.svelte:4:9 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n\tconst { name, count: initialCount, showDetails } = $props({\n\t\tname: \"World\",\n\t\tcount: 0,\n\t\tshowDetails: false\n\t});\n\t\n\t$state count = initialCount;\n</script>\n\n<div>\n\t<h1 data-testid=\"name-display\">Hello, {$name}!</h1>\n\t<p data-testid=\"count-display\">Count: {$count}</p>\n\t<button data-testid=\"increment-button\" on:click={() => $count += 1}>Increment</button>\n\t\n\t{#if $showDetails}\n\t\t<div data-testid=\"details\">\n\t\t\t<p>Name is {$name}</p>\n\t\t\t<p>Count is {$count}</p>\n\t\t\t<p>ShowDetails is {$showDetails}</p>\n\t\t</div>\n\t{/if}\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample2_13a676a861f5c36c/Component.svelte:10:8 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $props, $state } from 'svelte';\n\n\tlet { name, count, showDetails } = $props({\n\t\tname: \"World\",\n\t\tcount: 0,\n\t\tshowDetails: false\n\t});\n\n\tconst internalCount = $state(count);\n</script>\n\n<div>\n\t<h1 data-testid=\"name-display\">Hello, {name}</h1>\n\t<p data-testid=\"count-display\">Count: {internalCount}</p>\n\t<button data-testid=\"increment-button\" on:click={() => internalCount++}>Increment</button>\n\n\t{#if showDetails}\n\t\t<div data-testid=\"details\">\n\t\t\t<p>Name is {name}</p>\n\t\t\t<p>Count is {count}</p>\n\t\t\t<p>ShowDetails is {showDetails}</p>\n\t\t</div>\n\t{/if}\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample3_8b1c68a247795e81/Component.svelte:4:10 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $props: {\n    name = \"World\",\n    count = 0,\n    showDetails = false\n  }\n\n  let localCount = $state(count);\n</script>\n\n<div>\n  <h1 data-testid=\"name-display\">Hello, {$props.name}!</h1>\n  <p data-testid=\"count-display\">Count: {$state.localCount}</p>\n  <button data-testid=\"increment-button\" on:click={() => (localCount += 1)}>Increment</button>\n  \n  {#if $props.showDetails}\n    <div data-testid=\"details\">\n      <p>Name is {$props.name}</p>\n      <p>Count is {$state.localCount}</p>\n      <p>ShowDetails is {$props.showDetails}</p>\n    </div>\n  {/if}\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/props_sample4_3364837f160984d1/Component.svelte:14:40 `$props.name` is not a valid rune\nhttps://svelte.dev/e/rune_invalid_name"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const { name, count, showDetails } = $props({\n    name: \"World\",\n    count: 0,\n    showDetails: false\n  });\n\n  let countState = $state(count);\n</script>\n\n<div>\n  <h1 data-testid=\"name-display\">Hello, {name}</h1>\n  <p data-testid=\"count-display\">Count: {countState}</p>\n  <button data-testid=\"increment-button\" on:click={() => countState++}>Increment</button>\n  {#if showDetails}\n    <div data-testid=\"details\">\n      <p>Name is {name}</p>\n      <p>Count is {count}</p>\n      <p>ShowDetails is {showDetails}</p>\n    </div>\n  {/if}\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/props_sample5_78fe69e51d798eaa/Component.svelte:4:39 `$props` cannot be called with arguments\nhttps://svelte.dev/e/rune_invalid_arguments"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n\t$props = {\n\t\tname: string = \"World\",\n\t\tcount: number = 0,\n\t\tshowDetails: boolean = false\n\t}\n\n\tlet count = $state($count)\n</script>\n\n<div>\n  <h1 data-testid=\"name-display\">Hello, {$name}!</h1>\n  <p data-testid=\"count-display\">Count: {$count}</p>\n  <button data-testid=\"increment-button\" onClick={() => count++}>Increment</button>\n\n  {:if $showDetails}\n    <div data-testid=\"details\">\n      <p>Name is {$name}</p>\n      <p>Count is {$count}</p>\n      <p>ShowDetails is true</p>\n    </div>\n  {:endif}\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample6_1a4f045290684070/Component.svelte:18:3 {:...} block is invalid at this position (did you forget to close the preceding element or block?)\nhttps://svelte.dev/e/block_invalid_continuation_placement"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n\tconst { name = \"World\", count = 0, showDetails = false } = $props();\n\t$state count = count;\n</script>\n\n<div>\n\t<h1 data-testid=\"name-display\">Hello, {name}!</h1>\n\t<p data-testid=\"count-display\">Count: {count}</p>\n\t<button data-testid=\"increment-button\" on:click={() => count += 1}>Increment</button>\n\t{#if showDetails}\n\t\t<div data-testid=\"details\">\n\t\t\t<p>Name is {name}</p>\n\t\t\t<p>Count is {count}</p>\n\t\t\t<p>ShowDetails is {showDetails}</p>\n\t\t</div>\n\t{/if}\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample7_72f8592b11260565/Component.svelte:5:8 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport { $props, $state } from 'svelte';\n\n\tconst props = $props({\n\t\tname: \"World\",\n\t\tcount: 0,\n\t\tshowDetails: false\n\t});\n\n\tlet count = $state(props.count);\n</script>\n\n<div>\n\t<h1 data-testid=\"name-display\">Hello, {props.name}</h1>\n\t<p data-testid=\"count-display\">Count: {count}</p>\n\t<button data-testid=\"increment-button\" on:click={() => count++}>Increment</button>\n\t\n\t{#if props.showDetails}\n\t\t<div data-testid=\"details\">\n\t\t\t<p>Name is {props.name}</p>\n\t\t\t<p>Count is {props.count}</p>\n\t\t\t<p>ShowDetails is {props.showDetails}</p>\n\t\t</div>\n\t{/if}\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample8_477b918e5a09c170/Component.svelte:4:10 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n$props { name, count, showDetails } = { name: \"World\", count: 0, showDetails: false };\n\n$state let currentCount = count;\n\nconst incrementCount = () => {\ncurrentCount += 1;\n};\n</script>\n\n<div>\n  <h1 data-testid=\"name-display\">Hello, {name}!</h1>\n  <p data-testid=\"count-display\">Count: {currentCount}</p>\n  <button data-testid=\"increment-button\" on:click={ incrementCount }>Increment</button>\n\n  {#if showDetails}\n    <div data-testid=\"details\">\n      <p>Name is {name}</p>\n      <p>Count is {currentCount}</p>\n      <p>ShowDetails is {showDetails}</p>\n    </div>\n  {/if}\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample9_40b4446eae6854cc/Component.svelte:4:7 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      }
    ],
    "timestamp": "2025-09-18T22:21:41.967Z"
  },
  {
    "testName": "snippets",
    "provider": "OpenRouter",
    "modelId": "alibaba/tongyi-deepresearch-30b-a3b",
    "numSamples": 10,
    "numCorrect": 0,
    "pass1": 0,
    "pass10": 0,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const books = [\"The Lord of the Rings\", \"To Kill a Mockingbird\", \"1984\"];\n  const title = (book) => {\n    return <span data-testid=\"book-title\">{book}</span>;\n  };\n</script>\n\n<ul>\n  {#each books as book}\n    <li data-testid=\"book-item\">\n      {@render title(book)}\n    </li>\n  {/each}\n</ul>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample0_333393e47ca2212c/Component.svelte:6:11 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n   import { $state } from 'svelte';\n   let books = $state([\"The Lord of the Rings\", \"To Kill a Mockingbird\", \"1984\"]);\n   const title = (book) => {\n      return <span data-testid=\"book-title\">{book}</span>;\n   };\n</script>\n<ul>\n   {#each books as book}\n      <li data-testid=\"book-item\">\n         {@render title(book)}\n      </li>\n   {/each}\n</ul>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample1_d69ee17a151737a7/Component.svelte:7:13 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const books = [\"The Lord of the Rings\", \"To Kill a Mockingbird\", \"1984\"];\n\n  function title(book) {\n    return <span data-testid=\"book-title\">{book}</span>;\n  }\n</script>\n\n<ul>\n  {#each books as book}\n    <li data-testid=\"book-item\">\n      {@render title(book)}\n    </li>\n  {/each}\n</ul>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample2_ede495af2f05fe04/Component.svelte:7:11 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n\tconst books = [\"The Lord of the Rings\", \"To Kill a Mockingbird\", \"1984\"];\n\n\tfunction title(text) {\n\t\treturn <span data-testid=\"book-title\">${text}</span>;\n\t}\n</script>\n\n<ul>\n\t{#each books as book}\n\t\t<li data-testid=\"book-item\">\n\t\t\t{@render {\n\t\t\t\treturn $html(title(book));\n\t\t\t}}\n\t\t</li>\n\t{/each}\n</ul>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample3_b5362286d3e8e175/Component.svelte:7:9 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const books = [\n    \"The Lord of the Rings\",\n    \"To Kill a Mockingbird\",\n    \"1984\"\n  ];\n\n  snippet title($book) {\n    return <span data-testid=\"book-title\">{$book}</span>;\n  }\n</script>\n\n<ul>\n  {#each books as book}\n    <li data-testid=\"book-item\">\n      {@render title(book)}\n    </li>\n  {/each}\n</ul>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample4_0a866877312722ca/Component.svelte:10:10 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let books = [\"The Lord of the Rings\", \"To Kill a Mockingbird\", \"1984\"];\n  \n  const title = ($title) => {\n    return <span data-testid=\"book-title\">{$title}</span>;\n  };\n</script>\n\n<ul>\n  {#each books as book}\n    <li data-testid=\"book-item\">\n      {@render title(book)}\n    </li>\n  {/each}\n</ul>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample5_e69ad539767fcf43/Component.svelte:7:11 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n$state books = [\n  \"The Lord of the Rings\",\n  \"To Kill a Mockingbird\",\n  \"1984\"\n];\n\nsnippet title = (text: string) => {\n  return <span data-testid=\"book-title\">{text}</span>;\n};\n\n{#each books as bookTitle}\n  <li data-testid=\"book-item\">\n    {@render title(bookTitle)}\n  </li>\n{/each}",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample6_c0e07413b2317ec9/Component.svelte:10:2 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const books = [\n    \"The Lord of the Rings\",\n    \"To Kill a Mockingbird\",\n    \"1984\"\n  ];\n\n  const title = (bookTitle) => {\n    return <span data-testid=\"book-title\">{bookTitle}</span>;\n  };\n</script>\n\n<ul>\n  {#each books as book}\n    <li data-testid=\"book-item\">\n      {@render title(book)}\n    </li>\n  {/each}\n</ul>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample7_413fa114ae55eac8/Component.svelte:11:11 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n\timport {$state, {$snippet} from 'svelte';\n\t\n\tconst $bookTitles = $state(['The Lord of the Rings', 'To Kill a Mockingbird', '1984']);\n\t\n\tconst $title = $snippet(({ title }) => {\n\t\treturn <span data-testid=\"book-title\">{title}</span>;\n\t});\n</script>\n\n<ul>\n{#each $bookTitles as book}\n\t<li data-testid=\"book-item\">\n\t\t{@render($title, { title: book })}\n\t</li>\n{/each}\n</ul>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample8_1e165776b143ca65/Component.svelte:4:17 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const books = [\"The Lord of the Rings\", \"To Kill a Mockingbird\", \"1984\"];\n\n  snippet title($name) {\n    <span data-testid=\"book-title\">{$name}</span>;\n  }\n</script>\n\n<ul>\n  {#each books as book}\n    <li data-testid=\"book-item\">\n      {@render title($book)}\n    </li>\n  {/each}\n</ul>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample9_3eff68e82e3e825a/Component.svelte:6:10 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      }
    ],
    "timestamp": "2025-09-18T22:21:41.967Z"
  }
]