[
  {
    "testName": "counter",
    "provider": "OpenRouter",
    "modelId": "openai/gpt-oss-20b",
    "numSamples": 10,
    "numCorrect": 3,
    "pass1": 0.30000000000000004,
    "pass10": 1,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const count = $state(0);\n  function increment() { count += 1; }\n  function decrement() { count -= 1; }\n</script>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>\n\n<style>\n  .counter {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n  }\n</style>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/counter_sample0_2b4253fb4d520659/Component.svelte:5:25 Cannot assign to constant\nhttps://svelte.dev/e/constant_assignment"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const count = $state(0)\n  function increment() { count += 1 }\n  function decrement() { count -= 1 }\n</script>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/counter_sample1_b9266feb599d3afe/Component.svelte:5:25 Cannot assign to constant\nhttps://svelte.dev/e/constant_assignment"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const count = $state(0);\n\n  function increment() {\n    count.apply(v => v + 1);\n  }\n\n  function decrement() {\n    count.apply(v => v - 1);\n  }\n</script>\n\n<style>\n  .counter {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n  }\n</style>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>",
        "success": false,
        "errors": [
          "Cannot convert object to primitive value"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let count = $state(0);\n\n  function increment() {\n    count += 1;\n  }\n\n  function decrement() {\n    count -= 1;\n  }\n</script>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>",
        "success": true,
        "errors": []
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n    const count = $state(0);\n\n    function increment() {\n        count += 1;\n    }\n\n    function decrement() {\n        count -= 1;\n    }\n</script>\n\n<div class=\"counter\">\n    <button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n    <span data-testid=\"count-value\">{count}</span>\n    <button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/counter_sample4_e1f489a98cd51927/Component.svelte:7:8 Cannot assign to constant\nhttps://svelte.dev/e/constant_assignment"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const count = $state(0);\n</script>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={() => count--}>-</button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button data-testid=\"increment-button\" on:click={() => count++}>+</button>\n</div>\n\n<style>\n  .counter {\n    display: flex;\n    align-items: center;\n    gap: 0.5em;\n    font-family: sans-serif;\n  }\n  button {\n    width: 2em;\n    height: 2em;\n    font-size: 1.2em;\n  }\n</style>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/counter_sample5_ba5f2c1b9254a6ab/Component.svelte:8:57 Cannot assign to constant\nhttps://svelte.dev/e/constant_assignment"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let count = $state(0);\n</script>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={() => count--}>-</button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button data-testid=\"increment-button\" on:click={() => count++}>+</button>\n</div>",
        "success": true,
        "errors": []
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const count = $state(0);\n\n  function increment() {\n    count += 1;\n  }\n\n  function decrement() {\n    count -= 1;\n  }\n</script>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/counter_sample7_6e40dd8c11add40c/Component.svelte:7:4 Cannot assign to constant\nhttps://svelte.dev/e/constant_assignment"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const count = $state(0);\n</script>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={() => count--}>-</button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button data-testid=\"increment-button\" on:click={() => count++}>+</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/counter_sample8_9e5ace736722b39d/Component.svelte:8:57 Cannot assign to constant\nhttps://svelte.dev/e/constant_assignment"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let count = $state(0);\n  const increment = () => count += 1;\n  const decrement = () => count -= 1;\n</script>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>",
        "success": true,
        "errors": []
      }
    ],
    "version": "v2",
    "timestamp": "2025-08-26T23:54:57.607Z"
  },
  {
    "testName": "derived",
    "provider": "OpenRouter",
    "modelId": "openai/gpt-oss-20b",
    "numSamples": 10,
    "numCorrect": 0,
    "pass1": 0,
    "pass10": 0,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const number = $state(5);\n  const doubled = $derived(() => number * 2);\n  function increment() {\n    number += 1;\n  }\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/derived_sample0_4b84d8ceaf750a1d/Component.svelte:7:4 Cannot assign to constant\nhttps://svelte.dev/e/constant_assignment"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const number = $state(5);\n  const doubled = $derived(() => number * 2);\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={() => number++}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/derived_sample1_4da78ae9305bdbf5/Component.svelte:11:57 Cannot assign to constant\nhttps://svelte.dev/e/constant_assignment"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const number = $state(5)\n  const doubled = $derived(() => number() * 2)\n\n  function increment() {\n    number.set(number() + 1)\n  }\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {$number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {$doubled}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "store_invalid_shape\n`number` is not a store with a `subscribe` method\nhttps://svelte.dev/e/store_invalid_shape\n\n\tin <unknown>\n\tin Component.svelte\n",
          "store_invalid_shape\n`number` is not a store with a `subscribe` method\nhttps://svelte.dev/e/store_invalid_shape\n\n\tin <unknown>\n\tin Component.svelte\n"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\nconst number = $state(5);\nconst doubled = $derived(() => number * 2);\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {$number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {$doubled}</p>\n  <button data-testid=\"increment-button\" on:click={() => $number += 1}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "store_invalid_shape\n`number` is not a store with a `subscribe` method\nhttps://svelte.dev/e/store_invalid_shape\n\n\tin <unknown>\n\tin Component.svelte\n",
          "store_invalid_shape\n`number` is not a store with a `subscribe` method\nhttps://svelte.dev/e/store_invalid_shape\n\n\tin <unknown>\n\tin Component.svelte\n"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const number = $state(5);\n  const doubled = $derived(() => number * 2);\n  function increment() { number += 1; }\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/derived_sample4_8031ec40e165037d/Component.svelte:6:25 Cannot assign to constant\nhttps://svelte.dev/e/constant_assignment"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const number = $state(5);\n  const doubled = $derived(() => number() * 2);\n  function increment() {\n    number.set(number() + 1);\n  }\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number()}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled()}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "fn is not a function\n\n\tin <unknown>\n",
          "fn is not a function\n\n\tin <unknown>\n"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n    const number = $state(5);\n    const doubled = $derived(() => number * 2);\n    function increment() { number += 1; }\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/derived_sample6_a798bf87aeb285b3/Component.svelte:6:27 Cannot assign to constant\nhttps://svelte.dev/e/constant_assignment"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const number = $state(5);\n  const doubled = $derived(() => number * 2);\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={() => number++}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/derived_sample7_137bdba63d0f5588/Component.svelte:11:57 Cannot assign to constant\nhttps://svelte.dev/e/constant_assignment"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const number = $state(5);\n  const doubled = $derived(() => number * 2);\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={() => number += 1}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/derived_sample8_c2ed6794f3638486/Component.svelte:11:57 Cannot assign to constant\nhttps://svelte.dev/e/constant_assignment"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\nconst number = $state(5);\nconst doubled = $derived(() => number * 2);\n\nfunction increment() {\n  number += 1;\n}\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/derived_sample9_bf540c3e8364b236/Component.svelte:8:2 Cannot assign to constant\nhttps://svelte.dev/e/constant_assignment"
        ]
      }
    ],
    "version": "v2",
    "timestamp": "2025-08-26T23:54:57.607Z"
  },
  {
    "testName": "derived-by",
    "provider": "OpenRouter",
    "modelId": "openai/gpt-oss-20b",
    "numSamples": 10,
    "numCorrect": 1,
    "pass1": 0.09999999999999998,
    "pass10": 1,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const text = $state('');\n  const wordCount = $derived.by(() => {\n    const trimmed = $text.trim();\n    if (!trimmed) return 0;\n    return trimmed.split(/\\s+/).length;\n  }, [text]);\n\n  const charCount = $derived.by(() => $text.length, [text]);\n\n  const isLong = $derived.by(() => $wordCount > 15, [wordCount]);\n\n  function clear() {\n    text.set('');\n  }\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={$text} />\n  <button data-testid=\"clear-button\" on:click={clear}>Clear</button>\n  <div>\n    <p data-testid=\"word-count\">Words: {$wordCount}</p>\n    <p data-testid=\"char-count\">Characters: {$charCount}</p>\n    <p data-testid=\"length-indicator\">Status: { $isLong ? 'Long text' : 'Short text' }</p>\n  </div>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/derived-by_sample0_11cd1a784b94147e/Component.svelte:5:20 `$derived.by` must be called with exactly one argument\nhttps://svelte.dev/e/rune_invalid_arguments_length"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const text = $state('');\n  const { wordCount, charCount, isLong } = $derived.by(() => {\n    const txt = $text;\n    const words = txt.trim().split(/\\s+/).filter(Boolean);\n    const wc = words.length;\n    const cc = txt.length;\n    const long = wc > 15;\n    return { wordCount: wc, charCount: cc, isLong: long };\n  }, text);\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={$text} />\n  <button data-testid=\"clear-button\" on:click={() => text.set('')}>Clear</button>\n  <div>\n    <p data-testid=\"word-count\">Words: {$wordCount}</p>\n    <p data-testid=\"char-count\">Characters: {$charCount}</p>\n    <p data-testid=\"length-indicator\">Status: {$isLong ? 'Long text' : 'Short text'}</p>\n  </div>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/derived-by_sample1_629f3da1ec1c1df6/Component.svelte:5:43 `$derived.by` must be called with exactly one argument\nhttps://svelte.dev/e/rune_invalid_arguments_length"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let input = $state(\"\");\n  \n  const wordCount = $derived.by(() => {\n    const trimmed = input.trim();\n    return trimmed ? trimmed.split(/\\s+/).length : 0;\n  });\n  \n  const charCount = $derived.by(() => input.length);\n  \n  const isLong = $derived.by(() => wordCount > 15);\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={input} />\n  <button data-testid=\"clear-button\" on:click={() => input = \"\"}>Clear</button>\n  <div>\n    <p data-testid=\"word-count\">Words: {wordCount}</p>\n    <p data-testid=\"char-count\">Characters: {charCount}</p>\n    <p data-testid=\"length-indicator\">Status: {isLong ? \"Long text\" : \"Short text\"}</p>\n  </div>\n</div>",
        "success": true,
        "errors": []
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const text = $state('')\n\n  const stats = $derived.by(() => {\n    const trimmed = text.trim()\n    const words = trimmed ? trimmed.split(/\\s+/).filter(Boolean).length : 0\n    const chars = text.length\n    const isLong = words > 15\n    return { words, chars, isLong }\n  })\n\n  function clear() {\n    text.set('')\n  }\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <button data-testid=\"clear-button\" on:click={clear}>Clear</button>\n  <div>\n    <p data-testid=\"word-count\">Words: {stats.words}</p>\n    <p data-testid=\"char-count\">Characters: {stats.chars}</p>\n    <p data-testid=\"length-indicator\">\n      Status: {stats.isLong ? 'Long text' : 'Short text'}\n    </p>\n  </div>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/derived-by_sample3_9e5d43c783724f53/Component.svelte:20:46 Cannot bind to constant\nhttps://svelte.dev/e/constant_binding"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\nconst text = $state('')\nconst wordCount = $derived.by(text, t => {\n  const trimmed = t.trim()\n  return trimmed ? trimmed.split(/\\s+/).length : 0\n})\nconst charCount = $derived.by(text, t => t.length)\nconst isLong = $derived.by(wordCount, wc => wc > 15)\nconst status = $derived.by(isLong, l => l ? 'Long text' : 'Short text')\n</script>\n\n<div>\n  <input\n    data-testid=\"text-input\"\n    type=\"text\"\n    value={$text}\n    on:input={e => text.set(e.target.value)}\n  />\n  <button data-testid=\"clear-button\" on:click={() => text.set('')}>Clear</button>\n  <div>\n    <p data-testid=\"word-count\">Words: {$wordCount}</p>\n    <p data-testid=\"char-count\">Characters: {$charCount}</p>\n    <p data-testid=\"length-indicator\">Status: {$status}</p>\n  </div>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/derived-by_sample4_c99922bf898415ec/Component.svelte:5:18 `$derived.by` must be called with exactly one argument\nhttps://svelte.dev/e/rune_invalid_arguments_length"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const text = $state(\"\");\n\n  const wordCount = $derived.by(text, t => {\n    const trimmed = t.trim();\n    return trimmed ? trimmed.split(/\\s+/).filter(Boolean).length : 0;\n  });\n\n  const charCount = $derived.by(text, t => t.length);\n\n  const isLong = $derived.by(text, t => {\n    const trimmed = t.trim();\n    const count = trimmed ? trimmed.split(/\\s+/).filter(Boolean).length : 0;\n    return count > 15;\n  });\n\n  const clear = () => text.set(\"\");\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={$text} />\n  <button data-testid=\"clear-button\" on:click={clear}>Clear</button>\n  <div>\n    <p data-testid=\"word-count\">Words: {$wordCount}</p>\n    <p data-testid=\"char-count\">Characters: {$charCount}</p>\n    <p data-testid=\"length-indicator\">Status: { $isLong ? \"Long text\" : \"Short text\" }</p>\n  </div>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/derived-by_sample5_9d4e4f5dbd029d41/Component.svelte:6:20 `$derived.by` must be called with exactly one argument\nhttps://svelte.dev/e/rune_invalid_arguments_length"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const text = $state('');\n  const { words, chars, isLong } = $derived.by(() => {\n    const trimmed = text.trim();\n    const wordsCount = trimmed === '' ? 0 : trimmed.split(/\\s+/).length;\n    const charsCount = text.length;\n    const long = wordsCount > 15;\n    return { words: wordsCount, chars: charsCount, isLong: long };\n  });\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <button data-testid=\"clear-button\" on:click={() => text = ''}>Clear</button>\n  <div>\n    <p data-testid=\"word-count\">Words: {words}</p>\n    <p data-testid=\"char-count\">Characters: {chars}</p>\n    <p data-testid=\"length-indicator\">Status: {isLong ? 'Long text' : 'Short text'}</p>\n  </div>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/derived-by_sample6_b8fc94d751bb492e/Component.svelte:15:46 Cannot bind to constant\nhttps://svelte.dev/e/constant_binding"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\nconst text = $state('');\nconst stats = $derived.by([text], ($text) => {\n  const trimmed = $text.trim();\n  const words = trimmed ? trimmed.split(/\\s+/).length : 0;\n  const chars = $text.length;\n  const long = words > 15;\n  return { words, chars, long };\n});\nconst clear = () => { text = ''; };\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={$text} />\n  <button data-testid=\"clear-button\" on:click={clear}>Clear</button>\n  <div>\n    <p data-testid=\"word-count\">Words: {$stats.words}</p>\n    <p data-testid=\"char-count\">Characters: {$stats.chars}</p>\n    <p data-testid=\"length-indicator\">Status: {$stats.long ? 'Long text' : 'Short text'}</p>\n  </div>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/derived-by_sample7_a5d111eabe1cbd2f/Component.svelte:5:14 `$derived.by` must be called with exactly one argument\nhttps://svelte.dev/e/rune_invalid_arguments_length"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\nconst text = $state('');\nconst wordCount = $derived.by(text, t => t.trim().split(/\\s+/).filter(Boolean).length);\nconst charCount = $derived.by(text, t => t.length);\nconst isLong = $derived.by(wordCount, wc => wc > 15);\nconst status = $derived.by(isLong, l => l ? 'Long text' : 'Short text');\n</script>\n\n<div>\n  <input data-testid=\"text-input\" bind:value={$text} type=\"text\" />\n  <button data-testid=\"clear-button\" on:click={() => $text = ''}>Clear</button>\n  <div>\n    <p data-testid=\"word-count\">Words: {$wordCount}</p>\n    <p data-testid=\"char-count\">Characters: {$charCount}</p>\n    <p data-testid=\"length-indicator\">Status: {$status}</p>\n  </div>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/derived-by_sample8_e3d5b49533340788/Component.svelte:5:18 `$derived.by` must be called with exactly one argument\nhttps://svelte.dev/e/rune_invalid_arguments_length"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const text = $state('');\n  const stats = $derived.by(() => {\n    const str = $text;\n    const words = str.trim().split(/\\s+/).filter(Boolean).length;\n    const chars = str.length;\n    const isLong = words > 15;\n    return { words, chars, isLong };\n  });\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={$text} />\n  <button data-testid=\"clear-button\" on:click={() => text.set('')}>Clear</button>\n  <div>\n    <p data-testid=\"word-count\">Words: {$stats.words}</p>\n    <p data-testid=\"char-count\">Characters: {$stats.chars}</p>\n    <p data-testid=\"length-indicator\">Status: { $stats.isLong ? 'Long text' : 'Short text' }</p>\n  </div>\n</div>",
        "success": false,
        "errors": [
          "store_invalid_shape\n`text` is not a store with a `subscribe` method\nhttps://svelte.dev/e/store_invalid_shape\n\n\tin <unknown>\n",
          "store_invalid_shape\n`text` is not a store with a `subscribe` method\nhttps://svelte.dev/e/store_invalid_shape\n\n\tin <unknown>\n",
          "store_invalid_shape\n`text` is not a store with a `subscribe` method\nhttps://svelte.dev/e/store_invalid_shape\n\n\tin <unknown>\n"
        ]
      }
    ],
    "version": "v2",
    "timestamp": "2025-08-26T23:54:57.607Z"
  },
  {
    "testName": "each",
    "provider": "OpenRouter",
    "modelId": "openai/gpt-oss-20b",
    "numSamples": 10,
    "numCorrect": 8,
    "pass1": 0.7999999999999999,
    "pass10": 1,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const characters = $state([\"Jerry\", \"Elaine\", \"Kramer\"]);\n  function addGeorge() {\n    characters.push(\"George\");\n  }\n</script>\n\n<div>\n  <ul data-testid=\"characters-list\">\n    {#each characters as name}\n      <li data-testid=\"character\">{name}</li>\n    {/each}\n  </ul>\n  <button data-testid=\"add-george-button\" on:click={addGeorge}>Add George</button>\n</div>",
        "success": true,
        "errors": [],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const $characters = $state(['Jerry', 'Elaine', 'Kramer']);\n  function addGeorge() {\n    $characters.push('George');\n  }\n</script>\n\n<div>\n  <ul data-testid=\"characters-list\">\n    {#each $characters as character (character)}\n      <li data-testid=\"character\">{character}</li>\n    {/each}\n  </ul>\n  <button data-testid=\"add-george-button\" on:click={addGeorge}>Add George</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/each_sample1_227699c6702de0ec/Component.svelte:4:8 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let characters = $state(['Jerry', 'Elaine', 'Kramer']);\n  function addGeorge() {\n    characters.push('George');\n  }\n</script>\n\n<div>\n  <ul data-testid=\"characters-list\">\n    {#each characters as name}\n      <li data-testid=\"character\">{name}</li>\n    {/each}\n  </ul>\n  <button data-testid=\"add-george-button\" on:click={addGeorge}>Add George</button>\n</div>",
        "success": true,
        "errors": []
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\nconst characters = $state([\"Jerry\", \"Elaine\", \"Kramer\"]);\n</script>\n\n<div>\n  <ul data-testid=\"characters-list\">\n    {#each characters as character}\n      <li data-testid=\"character\">{character}</li>\n    {/each}\n  </ul>\n  <button data-testid=\"add-george-button\" on:click={() => characters.push(\"George\")}>Add George</button>\n</div>",
        "success": true,
        "errors": []
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let characters = ['Jerry', 'Elaine', 'Kramer'];\n\n  function addGeorge() {\n    characters = [...characters, 'George'];\n  }\n</script>\n\n<div>\n  <ul data-testid=\"characters-list\">\n    {#each characters as character}\n      <li data-testid=\"character\">{character}</li>\n    {/each}\n  </ul>\n\n  <button data-testid=\"add-george-button\" on:click={addGeorge}>\n    Add George\n  </button>\n</div>",
        "success": false,
        "errors": [
          "expected 3 to be 4 // Object.is equality"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const characters = $state(['Jerry', 'Elaine', 'Kramer']);\n  function addGeorge() {\n    characters.push('George');\n  }\n</script>\n\n<div>\n  <ul data-testid=\"characters-list\">\n    {#each characters as name}\n      <li data-testid=\"character\">{name}</li>\n    {/each}\n  </ul>\n  <button data-testid=\"add-george-button\" on:click={addGeorge}>Add George</button>\n</div>",
        "success": true,
        "errors": []
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\nlet characters = $state([\"Jerry\", \"Elaine\", \"Kramer\"]);\n\nfunction addGeorge() {\n  characters.push(\"George\");\n}\n</script>\n\n<div>\n  <ul data-testid=\"characters-list\">\n    {#each characters as char}\n      <li data-testid=\"character\">{char}</li>\n    {/each}\n  </ul>\n  <button data-testid=\"add-george-button\" on:click={addGeorge}>Add George</button>\n</div>",
        "success": true,
        "errors": []
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\nconst characters = $state([\"Jerry\", \"Elaine\", \"Kramer\"]);\n\nfunction addGeorge() {\n  characters.push(\"George\");\n}\n</script>\n\n<div>\n  <ul data-testid=\"characters-list\">\n    {#each characters as character}\n      <li data-testid=\"character\">{character}</li>\n    {/each}\n  </ul>\n  <button data-testid=\"add-george-button\" on:click={addGeorge}>Add George</button>\n</div>",
        "success": true,
        "errors": []
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n\tconst characters = $state([\"Jerry\", \"Elaine\", \"Kramer\"]);\n\n\tfunction addGeorge() {\n\t\tcharacters?.push(\"George\");\n\t}\n</script>\n\n<div>\n\t<ul data-testid=\"characters-list\">\n\t\t{#each characters as name}\n\t\t\t<li data-testid=\"character\">{name}</li>\n\t\t{/each}\n\t</ul>\n\t<button data-testid=\"add-george-button\" on:click={addGeorge}>Add George</button>\n</div>",
        "success": true,
        "errors": []
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let characters = $state(['Jerry', 'Elaine', 'Kramer']);\n  function addGeorge() {\n    characters.push('George');\n  }\n</script>\n\n<div>\n  <ul data-testid=\"characters-list\">\n    {#each characters as character}\n      <li data-testid=\"character\">{character}</li>\n    {/each}\n  </ul>\n  <button data-testid=\"add-george-button\" on:click={addGeorge}>\n    Add George\n  </button>\n</div>",
        "success": true,
        "errors": []
      }
    ],
    "version": "v2",
    "timestamp": "2025-08-26T23:54:57.607Z"
  },
  {
    "testName": "effect",
    "provider": "OpenRouter",
    "modelId": "openai/gpt-oss-20b",
    "numSamples": 10,
    "numCorrect": 0,
    "pass1": 0,
    "pass10": 0,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const number = $state(5);\n  let doubled = 0;\n  $effect(() => {\n    doubled = number * 2;\n  });\n  function increment() {\n    number += 1;\n  }\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/effect_sample0_2092c58d9b2a9f33/Component.svelte:10:4 Cannot assign to constant\nhttps://svelte.dev/e/constant_assignment"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const number = $state(5);\n  const doubled = $state(0);\n\n  $effect(() => {\n    doubled.set(number.get() * 2);\n  });\n\n  function increment() {\n    number.set(number.get() + 1);\n  }\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "number.get is not a function",
          "number.get is not a function"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const number = $state(5);\n  const doubled = $state(0);\n  $effect(() => {\n    doubled = number * 2;\n  });\n\n  function increment() {\n    number += 1;\n  }\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/effect_sample2_a6776c8eb2a10841/Component.svelte:7:4 Cannot assign to constant\nhttps://svelte.dev/e/constant_assignment"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const $number = $state(() => 5);\n  const $doubled = $effect(() => $number * 2);\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {$number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {$doubled}</p>\n  <button data-testid=\"increment-button\" on:click={() => $number += 1}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/effect_sample3_ad9631e9f788a671/Component.svelte:4:8 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const number = $state(5)\n  const doubled = $state(0)\n\n  $effect(() => {\n    doubled.set(number() * 2)\n  })\n\n  function increment() {\n    number.set(number() + 1)\n  }\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number()}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled()}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "fn is not a function\n\n\tin <unknown>\n",
          "fn is not a function\n\n\tin <unknown>\n"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const number = $state(5);\n  const doubled = $effect(() => number * 2);\n  function increment() {\n    number.value += 1;\n  }\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/effect_sample5_4793ddd2eb48c3fa/Component.svelte:5:18 `$effect()` can only be used as an expression statement\nhttps://svelte.dev/e/effect_invalid_placement"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n\tconst number = $state(5);\n\tconst doubled = $state(0);\n\n\t$effect(() => {\n\t\tdoubled = number * 2;\n\t});\n\n\tfunction increment() {\n\t\tnumber += 1;\n\t}\n</script>\n\n<div>\n\t<p data-testid=\"number-value\">Number: {number}</p>\n\t<p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n\t<button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/effect_sample6_7afa6371eb67701e/Component.svelte:8:2 Cannot assign to constant\nhttps://svelte.dev/e/constant_assignment"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const number = $state(5);\n  const doubled = $effect(() => number * 2);\n  const increment = () => number += 1;\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/effect_sample7_080b1cf7a4f46e0b/Component.svelte:5:18 `$effect()` can only be used as an expression statement\nhttps://svelte.dev/e/effect_invalid_placement"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const number = $state(5);\n  let doubled = 0;\n  $effect(() => {\n    doubled = number * 2;\n  });\n  function increment() {\n    number++;\n  }\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/effect_sample8_ee5da3f549108b3e/Component.svelte:10:4 Cannot assign to constant\nhttps://svelte.dev/e/constant_assignment"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const number = $state(5);\n  const doubled = $state(0);\n\n  $effect(() => {\n    doubled.set(number * 2);\n  });\n</script>\n\n<div>\n  <p data-testid=\"number-value\">Number: {number}</p>\n  <p data-testid=\"doubled-value\">Doubled: {doubled}</p>\n  <button data-testid=\"increment-button\" on:click={() => number.set(number + 1)}>\n    Increment\n  </button>\n</div>",
        "success": false,
        "errors": [
          "doubled.set is not a function",
          "doubled.set is not a function"
        ]
      }
    ],
    "version": "v2",
    "timestamp": "2025-08-26T23:54:57.607Z"
  },
  {
    "testName": "hello-world",
    "provider": "OpenRouter",
    "modelId": "openai/gpt-oss-20b",
    "numSamples": 10,
    "numCorrect": 10,
    "pass1": 1,
    "pass10": 1,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n  // No script needed for this simple component\n</script>\n\n<style>\n  .greeting {\n    color: blue;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    margin: 10px;\n    text-align: center;\n  }\n</style>\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>",
        "success": true,
        "errors": [],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<style>\n  :global(body) {\n    margin: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n  }\n  .greeting {\n    color: blue;\n    margin: 1rem;\n  }\n</style>\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>",
        "success": true,
        "errors": []
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n  // No logic needed for this simple component\n</script>\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\n\n<style>\n  :global(body) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    margin: 0;\n  }\n\n  .greeting {\n    color: blue;\n    text-align: center;\n    margin: 1rem;\n  }\n</style>",
        "success": true,
        "errors": []
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n  // HelloWorld component\n</script>\n\n<style>\n  body {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    margin: 0;\n  }\n\n  .greeting {\n    color: blue;\n    margin: 16px;\n    font-size: 1.5rem;\n  }\n</style>\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>",
        "success": true,
        "errors": []
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\n\n<style>\n  .greeting {\n    color: blue;\n    margin: 1rem;\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n  }\n</style>",
        "success": true,
        "errors": []
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n</script>\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\n\n<style>\n  .greeting {\n    color: blue;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    margin: 10px;\n  }\n</style>",
        "success": true,
        "errors": []
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\n\n<style>\n  .greeting {\n    color: blue;\n    margin: 10px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n</style>",
        "success": true,
        "errors": []
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n\t// No script needed for this simple component\n</script>\n\n<style>\n\t.greeting {\n\t\tcolor: blue;\n\t\ttext-align: center;\n\t\tmargin: 10px;\n\t}\n</style>\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>",
        "success": true,
        "errors": []
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n  // No script needed\n</script>\n\n<style>\n  .greeting {\n    color: blue;\n    margin: 10px auto;\n    text-align: center;\n    width: fit-content;\n  }\n</style>\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>",
        "success": true,
        "errors": []
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\n\n<style>\n.greeting {\n  color: blue;\n  text-align: center;\n  margin: 10px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n</style>",
        "success": true,
        "errors": []
      }
    ],
    "version": "v2",
    "timestamp": "2025-08-26T23:54:57.607Z"
  },
  {
    "testName": "inspect",
    "provider": "OpenRouter",
    "modelId": "openai/gpt-oss-20b",
    "numSamples": 10,
    "numCorrect": 0,
    "pass1": 0,
    "pass10": 0,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const text = $state('Hello world');\n\n  // Basic inspect to log the input value\n  $inspect(text);\n\n  // Inspect with custom callback to track updates\n  $inspect(text).with((newVal, oldVal) => {\n    console.log('Text changed from', oldVal, 'to', newVal);\n  });\n\n  // Inspect trace inside an effect that runs when the input changes\n  $effect(() => {\n    $inspect.trace(text);\n  });\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <p data-testid=\"text-value\">Current text: \"{text}\"</p>\n  <p data-testid=\"char-count\">Character count: {text.length}</p>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/inspect_sample0_793fa8d9266063a3/Component.svelte:21:46 Cannot bind to constant\nhttps://svelte.dev/e/constant_binding"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const text = $state(\"Hello world\");\n\n  // Basic inspect\n  $inspect(text);\n\n  // Inspect with custom callback\n  $inspect(text).with((newVal, oldVal, key) => {\n    console.log(text changed from \"${oldVal}\" to \"${newVal}\");\n  });\n\n  // Effect that runs when input changes and calls trace\n  $effect(() => {\n    // Establish dependency on text\n    const _ = text;\n    $inspect.trace();\n  });\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <p data-testid=\"text-value\">Current text: \"{text}\"</p>\n  <p data-testid=\"char-count\">Character count: {text.length}</p>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample1_9ec78338687ced86/Component.svelte:11:21 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const text = $state(\"Hello world\");\n\n  $inspect(text);\n\n  $inspect(text).with((prev, next) => {\n    console.log(\"Text updated to:\", next);\n  });\n\n  $effect(() => {\n    $inspect.trace(text);\n  });\n\n  const charCount = $derived(() => text.length);\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <p data-testid=\"text-value\">Current text: \"{text}\"</p>\n  <p data-testid=\"char-count\">Character count: {charCount}</p>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/inspect_sample2_20f3a4d4e05e144d/Component.svelte:20:46 Cannot bind to constant\nhttps://svelte.dev/e/constant_binding"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const text = $state(\"Hello world\");\n\n  // Basic inspection\n  $inspect(text);\n\n  // Custom callback on updates\n  $inspect(text).with(() => {\n    console.log('Text changed to:', text);\n  });\n\n  // Effect that logs trace when the input changes\n  $effect(() => {\n    $inspect.trace(text);\n  });\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <p data-testid=\"text-value\">Current text: \"{text}\"</p>\n  <p data-testid=\"char-count\">Character count: {text.length}</p>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/inspect_sample3_77590a7794c6e9cc/Component.svelte:21:46 Cannot bind to constant\nhttps://svelte.dev/e/constant_binding"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const text = $state(\"Hello world\");\n  $inspect(text);\n  $inspect(text).with(() => console.log(\"Updated text:\", text));\n  $effect(() => {\n    $inspect.trace();\n  });\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <p data-testid=\"text-value\">Current text: \"{text}\"</p>\n  <p data-testid=\"char-count\">Character count: {text.length}</p>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/inspect_sample4_0a8a1764d704a81c/Component.svelte:13:46 Cannot bind to constant\nhttps://svelte.dev/e/constant_binding"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const text = $state(\"Hello world\");\n  $inspect(text);\n  $inspect(text).with(value => console.log('Custom callback value:', value));\n  $effect(() => {\n      $inspect.trace('Input changed to:', text);\n  });\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <p data-testid=\"text-value\">Current text: \"{text}\"</p>\n  <p data-testid=\"char-count\">Character count: {text.length}</p>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/inspect_sample5_f719db229f285dba/Component.svelte:8:6 `$inspect.trace` must be called with zero or one arguments\nhttps://svelte.dev/e/rune_invalid_arguments_length"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const text = $state(\"Hello world\");\n  \n  $inspect(text);\n  $inspect(text).with((prev, curr) => {\n    console.log(Text changed from \"${prev}\" to \"${curr}\");\n  });\n  \n  $effect(() => {\n    $inspect.trace(text);\n  });\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <p data-testid=\"text-value\">Current text: \"{text}\"</p>\n  <p data-testid=\"char-count\">Character count: {text.length}</p>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample6_74829b4d3938dadc/Component.svelte:8:21 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const text = $state('Hello world');\n  $inspect(text);\n  $inspect(text).with((v) => console.log('Updated text:', v));\n  $effect(() => {\n    $inspect(text).trace();\n  });\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <p data-testid=\"text-value\">Current text: \"{text}\"</p>\n  <p data-testid=\"char-count\">Character count: {text.length}</p>\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/inspect_sample7_ffac6c8288bbcca1/Component.svelte:13:46 Cannot bind to constant\nhttps://svelte.dev/e/constant_binding"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $state let text = \"Hello world\";\n\n  // Basic inspect – logs the input value whenever it changes\n  $inspect(text, 'input');\n\n  // Inspect with a custom callback to track updates\n  $inspect(text, 'input').with('custom', (val) => console.log('Custom callback: text is now', val));\n\n  // Effect that runs when the input changes and logs a trace\n  $effect(() => {\n    $inspect.trace();\n  }, [text]);\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <p data-testid=\"text-value\">Current text: \"{text}\"</p>\n  <p data-testid=\"char-count\">Character count: {text.length}</p>\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/inspect_sample8_311d73c575f6a1a4/Component.svelte:4:9 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let text = $state(\"Hello world\");\n\n  $inspect(text);\n\n  $inspect(text).with((prev, next) => {\n    console.log(\"text changed from\", prev, \"to\", next);\n  });\n\n  $effect(() => {\n    $inspect.trace();\n    // Reference the state to trigger the effect on changes\n    text;\n  });\n</script>\n\n<div>\n  <input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n  <p data-testid=\"text-value\">Current text: \"{text}\"</p>\n  <p data-testid=\"char-count\">Character count: {text.length}</p>\n</div>",
        "success": false,
        "errors": [
          "expected \"log\" to be called with arguments: [ StringContaining \"Text updated to:\" ]\u001b[90m\n\nReceived: \n\n\u001b[1m  1st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"init\",\u001b[90m\n\u001b[31m+   \"Hello world\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  2nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"init\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"Hello world\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  3rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.10ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  4th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"Hello world\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  5th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  6th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  7th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  8th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  9th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.22ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  10th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  11th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  12th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  13th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  14th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"T\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  15th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"T\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  16th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.12ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  17th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"T\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  18th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  19th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  20th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  21st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"Te\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  22nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"Te\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  23rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.16ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  24th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"Te\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  25th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  26th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  27th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  28th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"Tes\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  29th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"Tes\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  30th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.10ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  31st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"Tes\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  32nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  33rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  34th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  35th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"Test\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  36th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"Test\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  37th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.11ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  38th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"Test\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  39th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  40th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  41st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  42nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"Testi\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  43rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"Testi\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  44th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.10ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  45th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"Testi\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  46th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  47th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  48th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  49th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"Testin\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  50th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"Testin\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  51st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.09ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  52nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"Testin\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  53rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  54th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  55th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  56th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"Testing\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  57th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"Testing\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  58th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.12ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  59th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"Testing\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  60th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  61st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  62nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  63rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"Testing \",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  64th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"Testing \",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  65th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.13ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  66th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"Testing \",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  67th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  68th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  69th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  70th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"Testing $\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  71st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"Testing $\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  72nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.08ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  73rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"Testing $\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  74th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  75th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  76th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  77th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"Testing $i\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  78th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"Testing $i\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  79th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.10ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  80th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"Testing $i\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  81st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  82nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  83rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  84th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"Testing $in\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  85th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"Testing $in\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  86th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.09ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  87th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"Testing $in\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  88th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  89th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  90th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  91st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"Testing $ins\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  92nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"Testing $ins\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  93rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.09ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  94th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"Testing $ins\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  95th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  96th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  97th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  98th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"Testing $insp\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  99th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"Testing $insp\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  100th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.09ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  101st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"Testing $insp\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  102nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  103rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  104th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  105th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"Testing $inspe\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  106th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"Testing $inspe\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  107th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.10ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  108th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"Testing $inspe\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  109th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  110th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  111th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  112th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"Testing $inspec\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  113th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"Testing $inspec\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  114th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.09ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  115th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"Testing $inspec\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  116th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  117th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  118th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  119th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"Testing $inspect\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  120th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"Testing $inspect\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  121st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.09ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  122nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"Testing $inspect\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  123rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  124th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  125th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to:\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m125\u001b[22m\n\u001b[39m",
          "expected \"log\" to be called with arguments: [ StringContaining \"!@#$%^&*()\" ]\u001b[90m\n\nReceived: \n\n\u001b[1m  1st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"init\",\u001b[90m\n\u001b[31m+   \"Hello world\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  2nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"init\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"Hello world\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  3rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.10ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  4th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"Hello world\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  5th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  6th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  7th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  8th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  9th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.08ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  10th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  11th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  12th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  13th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  14th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"!\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  15th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"!\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  16th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.11ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  17th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"!\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  18th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  19th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  20th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  21st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"!@\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  22nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"!@\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  23rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.10ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  24th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"!@\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  25th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  26th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  27th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  28th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"!@#\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  29th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"!@#\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  30th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.10ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  31st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"!@#\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  32nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  33rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  34th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  35th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"!@#$\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  36th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"!@#$\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  37th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.09ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  38th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"!@#$\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  39th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  40th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  41st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  42nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"!@#$%\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  43rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"!@#$%\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  44th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.13ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  45th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"!@#$%\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  46th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  47th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  48th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  49th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"!@#$%^\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  50th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"!@#$%^\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  51st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.08ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  52nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"!@#$%^\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  53rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  54th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  55th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  56th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"!@#$%^&\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  57th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"!@#$%^&\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  58th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.11ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  59th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"!@#$%^&\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  60th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  61st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  62nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  63rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"!@#$%^&*\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  64th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"!@#$%^&*\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  65th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.13ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  66th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"!@#$%^&*\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  67th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  68th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  69th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  70th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"!@#$%^&*(\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  71st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"!@#$%^&*(\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  72nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.14ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  73rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"!@#$%^&*(\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  74th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  75th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  76th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  77th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"!@#$%^&*()\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  78th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"!@#$%^&*()\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  79th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.09ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  80th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"!@#$%^&*()\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  81st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  82nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  83rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"!@#$%^&*()\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m83\u001b[22m\n\u001b[39m",
          "expected \"log\" to be called with arguments: [ StringContaining{…} ]\u001b[90m\n\nReceived: \n\n\u001b[1m  1st log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to: \\\"\\\"\",\u001b[90m\n\u001b[31m+   \"init\",\u001b[90m\n\u001b[31m+   \"Hello world\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  2nd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to: \\\"\\\"\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"init\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"Hello world\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  3rd log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to: \\\"\\\"\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.09ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  4th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to: \\\"\\\"\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"Hello world\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  5th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to: \\\"\\\"\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  6th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to: \\\"\\\"\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  7th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to: \\\"\\\"\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  8th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to: \\\"\\\"\",\u001b[90m\n\u001b[31m+   \"text changed from\",\u001b[90m\n\u001b[31m+   \"update\",\u001b[90m\n\u001b[31m+   \"to\",\u001b[90m\n\u001b[31m+   \"\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  9th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to: \\\"\\\"\",\u001b[90m\n\u001b[31m+   \"$effect(...) (tmp/​samples/​openrouter/​inspect_sample9_039cc8f089bcb32b/​Component.svelte:12:10) %c(0.08ms)\",\u001b[90m\n\u001b[31m+   \"color: grey\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  10th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to: \\\"\\\"\",\u001b[90m\n\u001b[31m+   \"%c$state%c text\",\u001b[90m\n\u001b[31m+   \"color: CornflowerBlue; font-weight: bold\",\u001b[90m\n\u001b[31m+   \"font-weight: normal\",\u001b[90m\n\u001b[31m+   \"\",\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  11th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to: \\\"\\\"\",\u001b[90m\n\u001b[31m+   CreatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  12th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to: \\\"\\\"\",\u001b[90m\n\u001b[31m+   UpdatedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\n\u001b[1m  13th log call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   StringContaining \"Text updated to: \\\"\\\"\",\u001b[90m\n\u001b[31m+   TracedAtError {\u001b[90m\n\u001b[31m+     \"message\": \"\",\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m13\u001b[22m\n\u001b[39m"
        ]
      }
    ],
    "version": "v2",
    "timestamp": "2025-08-26T23:54:57.607Z"
  },
  {
    "testName": "props",
    "provider": "OpenRouter",
    "modelId": "openai/gpt-oss-20b",
    "numSamples": 10,
    "numCorrect": 1,
    "pass1": 0.09999999999999998,
    "pass10": 1,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const { name = \"World\", count: initialCount = 0, showDetails = false } = $props;\n  const count = $state(initialCount);\n</script>\n\n<div>\n  <h1 data-testid=\"name-display\">Hello, {name}!</h1>\n  <p data-testid=\"count-display\">Count: {count}</p>\n  <button data-testid=\"increment-button\" on:click={() => count++}>Increment</button>\n\n  {#if showDetails}\n    <div data-testid=\"details\">\n      <p>Name is {name}</p>\n      <p>Count is {count}</p>\n      <p>ShowDetails is {showDetails}</p>\n    </div>\n  {/if}\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/props_sample0_7a49d523d45d6ae6/Component.svelte:4:75 Cannot use rune without parentheses\nhttps://svelte.dev/e/rune_missing_parentheses"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $props name = 'World';\n  $props count = 0;\n  $props showDetails = false;\n  \n  const $count = $state(count);\n\n  function increment() {\n    $count += 1;\n  }\n</script>\n\n<div>\n  <h1 data-testid=\"name-display\">Hello, {name}!</h1>\n  <p data-testid=\"count-display\">Count: {$count}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n\n  {#if showDetails}\n    <div data-testid=\"details\">\n      <p>Name is {name}</p>\n      <p>Count is {$count}</p>\n      <p>ShowDetails is {showDetails}</p>\n    </div>\n  {/if}\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample1_88ab9bbaff16eece/Component.svelte:4:9 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const { name = \"World\", count = 0, showDetails = false } = $props\n  const $count = $state(count)\n\n  function increment() {\n    $count += 1\n  }\n</script>\n\n<div>\n  <h1 data-testid=\"name-display\">Hello, {name}!</h1>\n  <p data-testid=\"count-display\">Count: {$count}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n\n  {#if showDetails}\n  <div data-testid=\"details\">\n    <p>Name is {name}</p>\n    <p>Count is {$count}</p>\n    <p>ShowDetails is {showDetails}</p>\n  </div>\n  {/if}\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample2_5fffa4bda21351fe/Component.svelte:5:8 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $props {\n    name = \"World\";\n    count = 0;\n    showDetails = false;\n  }\n  $state countState = count;\n  function increment() {\n    countState += 1;\n  }\n</script>\n\n<div>\n  <h1 data-testid=\"name-display\">Hello, {name}!</h1>\n  <p data-testid=\"count-display\">Count: {countState}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n  {#if showDetails}\n    <div data-testid=\"details\">\n      <p>Name is {name}</p>\n      <p>Count is {countState}</p>\n      <p>ShowDetails is {showDetails}</p>\n    </div>\n  {/if}\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample3_14f8552aa0183880/Component.svelte:4:9 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const props = $props({\n    name: \"World\",\n    count: 0,\n    showDetails: false\n  });\n\n  const state = $state({\n    count: props.count\n  });\n</script>\n\n<main>\n  <h1 data-testid=\"name-display\">Hello, {props.name}!</h1>\n  <p data-testid=\"count-display\">Count: {state.count}</p>\n  <button data-testid=\"increment-button\" on:click={() => state.count += 1}>\n    Increment\n  </button>\n\n  {#if props.showDetails}\n    <div data-testid=\"details\">\n      <p>Name is {props.name}</p>\n      <p>Count is {state.count}</p>\n      <p>ShowDetails is true</p>\n    </div>\n  {/if}\n</main>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/props_sample4_b7379a8803715481/Component.svelte:4:16 `$props` cannot be called with arguments\nhttps://svelte.dev/e/rune_invalid_arguments"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const { name = \"World\", count = 0, showDetails = false } = $props;\n  const $count = $state(count);\n  function increment() {\n    $count += 1;\n  }\n</script>\n\n<div>\n  <h1 data-testid=\"name-display\">Hello, {name}!</h1>\n  <p data-testid=\"count-display\">Count: {$count}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n\n  {#if showDetails}\n    <div data-testid=\"details\">\n      <p>Name is {name}</p>\n      <p>Count is {$count}</p>\n      <p>ShowDetails is true</p>\n    </div>\n  {/if}\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample5_fddd5815e9835931/Component.svelte:5:8 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const { name = \"World\", count: initialCount = 0, showDetails = false } = $props\n  const count = $state(initialCount)\n  function increment() {\n    count.value++\n  }\n</script>\n\n<div>\n  <h1 data-testid=\"name-display\">Hello, {name}!</h1>\n  <p data-testid=\"count-display\">Count: {count.value}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n\n  {#if showDetails}\n    <div data-testid=\"details\">\n      <p>Name is {name}</p>\n      <p>Count is {count.value}</p>\n      <p>ShowDetails is {showDetails}</p>\n    </div>\n  {/if}\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/props_sample6_4db84a2a4a06f64d/Component.svelte:4:75 Cannot use rune without parentheses\nhttps://svelte.dev/e/rune_missing_parentheses"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const { name = \"World\", count = 0, showDetails = false } = $props();\n  let countState = $state(count);\n\n  const increment = () => {\n    countState += 1;\n  };\n</script>\n\n<div>\n  <h1 data-testid=\"name-display\">Hello, {name}!</h1>\n  <p data-testid=\"count-display\">Count: {countState}</p>\n  <button data-testid=\"increment-button\" on:click={increment}>Increment</button>\n\n  {#if showDetails}\n    <div data-testid=\"details\">\n      <p>Name is {name}</p>\n      <p>Count is {countState}</p>\n      <p>ShowDetails is {showDetails}</p>\n    </div>\n  {/if}\n</div>",
        "success": true,
        "errors": []
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script>\n  $props {\n    name = \"World\";\n    count = 0;\n    showDetails = false;\n  }\n\n  const count = $state(count);\n  const increment = () => {\n    count.set(count() + 1);\n  };\n</script>\n\n<div>\n  <h1 data-testid=\"name-display\">Hello, {name}!</h1>\n  <p data-testid=\"count-display\">Count: {count()}</p>\n  <button type=\"button\" data-testid=\"increment-button\" on:click={increment}>Increment</button>\n\n  {#if showDetails}\n    <div data-testid=\"details\">\n      <p>Name is {name}</p>\n      <p>Count is {count()}</p>\n      <p>ShowDetails is {showDetails}</p>\n    </div>\n  {/if}\n</div>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/props_sample8_1786a0b6fa2602ac/Component.svelte:4:9 Unexpected token\nhttps://svelte.dev/e/js_parse_error"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const { name = \"World\", count: initialCount = 0, showDetails = false } = $props;\n\n  let count = $state(initialCount);\n</script>\n\n<div>\n  <h1 data-testid=\"name-display\">Hello, {name}!</h1>\n  <p data-testid=\"count-display\">Count: {count}</p>\n  <button data-testid=\"increment-button\" on:click={() => count++}>Increment</button>\n\n  {#if showDetails}\n  <div data-testid=\"details\">\n    <p>Name is {name}</p>\n    <p>Count is {count}</p>\n    <p>ShowDetails is {showDetails}</p>\n  </div>\n  {/if}\n</div>",
        "success": false,
        "errors": [
          "tmp/samples/openrouter/props_sample9_b6543ba2c07f53f9/Component.svelte:4:75 Cannot use rune without parentheses\nhttps://svelte.dev/e/rune_missing_parentheses"
        ]
      }
    ],
    "version": "v2",
    "timestamp": "2025-08-26T23:54:57.607Z"
  },
  {
    "testName": "snippets",
    "provider": "OpenRouter",
    "modelId": "openai/gpt-oss-20b",
    "numSamples": 10,
    "numCorrect": 1,
    "pass1": 0.09999999999999998,
    "pass10": 1,
    "context": {
      "used": false,
      "content": ""
    },
    "samples": [
      {
        "index": 0,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const books = [\"The Lord of the Rings\", \"To Kill a Mockingbird\", \"1984\"];\n</script>\n\n<svelte:snippet name=\"title\" let:title>\n  <span data-testid=\"book-title\">{title}</span>\n</svelte:snippet>\n\n<ul>\n  {#each books as book}\n    <li data-testid=\"book-item\">{@render title book}</li>\n  {/each}\n</ul>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample0_0718d2555c3715db/Component.svelte:7:1 Valid `<svelte:...>` tag names are svelte:head, svelte:options, svelte:window, svelte:document, svelte:body, svelte:element, svelte:component, svelte:self, svelte:fragment or svelte:boundary\nhttps://svelte.dev/e/svelte_meta_invalid_tag"
        ],
        "temperature": 0
      },
      {
        "index": 1,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const books = [\n    \"The Lord of the Rings\",\n    \"To Kill a Mockingbird\",\n    \"1984\"\n  ];\n</script>\n\n<svelte:snippet name=\"title\" let:title>\n  <span data-testid=\"book-title\">{title}</span>\n</svelte:snippet>\n\n<ul>\n  {#each books as book}\n    <li data-testid=\"book-item\">\n      {@render title title=book}\n    </li>\n  {/each}\n</ul>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample1_9bea864bda7e45c5/Component.svelte:11:1 Valid `<svelte:...>` tag names are svelte:head, svelte:options, svelte:window, svelte:document, svelte:body, svelte:element, svelte:component, svelte:self, svelte:fragment or svelte:boundary\nhttps://svelte.dev/e/svelte_meta_invalid_tag"
        ]
      },
      {
        "index": 2,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const books = [\n    \"The Lord of the Rings\",\n    \"To Kill a Mockingbird\",\n    \"1984\"\n  ];\n</script>\n\n<ul>\n  {#each books as book}\n    <li data-testid=\"book-item\">{@render title(book)}</li>\n  {/each}\n</ul>\n\n{#snippet title(book)}\n  <span data-testid=\"book-title\">{book}</span>\n{/snippet}",
        "success": true,
        "errors": []
      },
      {
        "index": 3,
        "code": "<svelte:options runes={true} />\n\n<script>\n  let books = [\n    \"The Lord of the Rings\",\n    \"To Kill a Mockingbird\",\n    \"1984\"\n  ];\n</script>\n\n<svelte:snippet title let:title>\n  <span data-testid=\"book-title\">{title}</span>\n</svelte:snippet>\n\n<ul>\n  {#each books as book}\n    <li data-testid=\"book-item\">\n      {@render title(book)}\n    </li>\n  {/each}\n</ul>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample3_754225fdb53aaebb/Component.svelte:11:1 Valid `<svelte:...>` tag names are svelte:head, svelte:options, svelte:window, svelte:document, svelte:body, svelte:element, svelte:component, svelte:self, svelte:fragment or svelte:boundary\nhttps://svelte.dev/e/svelte_meta_invalid_tag"
        ]
      },
      {
        "index": 4,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const books = [\n    \"The Lord of the Rings\",\n    \"To Kill a Mockingbird\",\n    \"1984\"\n  ];\n</script>\n\n<ul>\n  {#each books as book}\n    <li data-testid=\"book-item\">{@render title(book)}</li>\n  {/each}\n</ul>\n\n{@snippet title(book)}\n  <span data-testid=\"book-title\">{book}</span>\n{/snippet}",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample4_8508832cbf4bdefd/Component.svelte:19:1 Unexpected block closing tag\nhttps://svelte.dev/e/block_unexpected_close"
        ]
      },
      {
        "index": 5,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const books = [\n    \"The Lord of the Rings\",\n    \"To Kill a Mockingbird\",\n    \"1984\"\n  ];\n</script>\n\n{@snippet title(bookTitle)}\n  <span data-testid=\"book-title\">{bookTitle}</span>\n{/snippet}\n\n<ul>\n  {#each books as book}\n    <li data-testid=\"book-item\">{@render title(book)}</li>\n  {/each}\n</ul>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample5_b05c801bafa65a34/Component.svelte:13:1 Unexpected block closing tag\nhttps://svelte.dev/e/block_unexpected_close"
        ]
      },
      {
        "index": 6,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const books = [\n    'The Lord of the Rings',\n    'To Kill a Mockingbird',\n    '1984'\n  ];\n</script>\n\n<ul>\n  {#each books as book}\n    <li data-testid=\"book-item\">\n      {@render title book}\n    </li>\n  {/each}\n</ul>\n\n{@snippet title(book)}\n  <span data-testid=\"book-title\">{book}</span>\n{/snippet}",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample6_31de3cf8a04ce264/Component.svelte:14:15 `{@render ...}` tags can only contain call expressions\nhttps://svelte.dev/e/render_tag_invalid_expression"
        ]
      },
      {
        "index": 7,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const books = [\n    \"The Lord of the Rings\",\n    \"To Kill a Mockingbird\",\n    \"1984\"\n  ];\n</script>\n\n<ul>\n  {#each books as book}\n    <li data-testid=\"book-item\">\n      {@render title book}\n    </li>\n  {/each}\n</ul>\n\n{@snippet title t}\n  <span data-testid=\"book-title\">{t}</span>\n{/snippet}",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample7_5405950e9719c504/Component.svelte:14:15 `{@render ...}` tags can only contain call expressions\nhttps://svelte.dev/e/render_tag_invalid_expression"
        ]
      },
      {
        "index": 8,
        "code": "<svelte:options runes={true} />\n\n<script lang=\"ts\">\n\tconst books = [\n\t\t\"The Lord of the Rings\",\n\t\t\"To Kill a Mockingbird\",\n\t\t\"1984\"\n\t];\n</script>\n\n<svelte:snippet name=\"title\" let:book>\n\t<span data-testid=\"book-title\">{book}</span>\n</svelte:snippet>\n\n<ul>\n\t{#each books as book}\n\t\t<li data-testid=\"book-item\">\n\t\t\t{@render title with book}\n\t\t</li>\n\t{/each}\n</ul>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample8_9506db14f4d8a289/Component.svelte:11:1 Valid `<svelte:...>` tag names are svelte:head, svelte:options, svelte:window, svelte:document, svelte:body, svelte:element, svelte:component, svelte:self, svelte:fragment or svelte:boundary\nhttps://svelte.dev/e/svelte_meta_invalid_tag"
        ]
      },
      {
        "index": 9,
        "code": "<svelte:options runes={true} />\n\n<script>\n  const books = [\n    \"The Lord of the Rings\",\n    \"To Kill a Mockingbird\",\n    \"1984\"\n  ];\n</script>\n\n<ul>\n  {#each books as book}\n    <li data-testid=\"book-item\">\n      {@render title(book)}\n    </li>\n  {/each}\n</ul>\n\n<svelte:snippet name=\"title\" let:book>\n  <span data-testid=\"book-title\">{book}</span>\n</svelte:snippet>",
        "success": false,
        "errors": [
          "/Users/maxfarrell/Desktop/repos/forks/svelte-bench/tmp/samples/openrouter/snippets_sample9_71a8a02ca6598003/Component.svelte:19:1 Valid `<svelte:...>` tag names are svelte:head, svelte:options, svelte:window, svelte:document, svelte:body, svelte:element, svelte:component, svelte:self, svelte:fragment or svelte:boundary\nhttps://svelte.dev/e/svelte_meta_invalid_tag"
        ]
      }
    ],
    "version": "v2",
    "timestamp": "2025-08-26T23:54:57.607Z"
  }
]